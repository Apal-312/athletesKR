{"ast":null,"code":"// Импортируем необходимые модули из Firebase SDK (новая версия)\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from \"firebase/auth\";\n\n// Конфигурация Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDvkYyC_5oFo8XLedmdWNviEPSnXMFU01g\",\n  authDomain: \"athleteskr.firebaseapp.com\",\n  projectId: \"athleteskr\",\n  storageBucket: \"athleteskr.firebasestorage.app\",\n  messagingSenderId: \"391242686743\",\n  appId: \"1:391242686743:web:4f76512c20ff752f495752\",\n  measurementId: \"G-42H4DX8WW8\"\n};\n\n// Инициализация Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Получение Auth из Firebase\nconst auth = getAuth(app);\n\n// Функция для регистрации пользователя\nconst handleRegister = async (email, password) => {\n  try {\n    await createUserWithEmailAndPassword(auth, email, password);\n    console.log(\"Пользователь успешно зарегистрирован\");\n  } catch (error) {\n    console.error(\"Ошибка регистрации:\", error.message);\n  }\n};\n\n// Функция для входа пользователя\nconst handleLogin = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n    console.log(\"Пользователь вошел\");\n  } catch (error) {\n    console.error(\"Ошибка входа:\", error.message);\n  }\n};\n\n// Функция для выхода пользователя\nconst handleLogOut = async () => {\n  try {\n    await signOut(auth);\n    console.log(\"Пользователь вышел\");\n  } catch (error) {\n    console.error(\"Ошибка выхода:\", error.message);\n  }\n};\n\n// Отслеживание состояния пользователя\nonAuthStateChanged(auth, user => {\n  if (user) {\n    console.log(\"Пользователь авторизован:\", user);\n  } else {\n    console.log(\"Пользователь не авторизован\");\n  }\n});\nexport { auth, handleRegister, handleLogin, handleLogOut };","map":{"version":3,"names":["initializeApp","getAuth","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","handleRegister","email","password","console","log","error","message","handleLogin","handleLogOut","user"],"sources":["/Users/macbook/Desktop/athletesKR/src/fire.js"],"sourcesContent":["// Импортируем необходимые модули из Firebase SDK (новая версия)\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n} from \"firebase/auth\";\n\n// Конфигурация Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDvkYyC_5oFo8XLedmdWNviEPSnXMFU01g\",\n  authDomain: \"athleteskr.firebaseapp.com\",\n  projectId: \"athleteskr\",\n  storageBucket: \"athleteskr.firebasestorage.app\",\n  messagingSenderId: \"391242686743\",\n  appId: \"1:391242686743:web:4f76512c20ff752f495752\",\n  measurementId: \"G-42H4DX8WW8\",\n};\n\n// Инициализация Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Получение Auth из Firebase\nconst auth = getAuth(app);\n\n// Функция для регистрации пользователя\nconst handleRegister = async (email, password) => {\n  try {\n    await createUserWithEmailAndPassword(auth, email, password);\n    console.log(\"Пользователь успешно зарегистрирован\");\n  } catch (error) {\n    console.error(\"Ошибка регистрации:\", error.message);\n  }\n};\n\n// Функция для входа пользователя\nconst handleLogin = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n    console.log(\"Пользователь вошел\");\n  } catch (error) {\n    console.error(\"Ошибка входа:\", error.message);\n  }\n};\n\n// Функция для выхода пользователя\nconst handleLogOut = async () => {\n  try {\n    await signOut(auth);\n    console.log(\"Пользователь вышел\");\n  } catch (error) {\n    console.error(\"Ошибка выхода:\", error.message);\n  }\n};\n\n// Отслеживание состояния пользователя\nonAuthStateChanged(auth, (user) => {\n  if (user) {\n    console.log(\"Пользователь авторизован:\", user);\n  } else {\n    console.log(\"Пользователь не авторизован\");\n  }\n});\n\nexport { auth, handleRegister, handleLogin, handleLogOut };\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,kBAAkB,EAClBC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,OAAO,QACF,eAAe;;AAEtB;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,4BAA4B;EACxCC,SAAS,EAAE,YAAY;EACvBC,aAAa,EAAE,gCAAgC;EAC/CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGd,aAAa,CAACM,cAAc,CAAC;;AAEzC;AACA,MAAMS,IAAI,GAAGd,OAAO,CAACa,GAAG,CAAC;;AAEzB;AACA,MAAME,cAAc,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAChD,IAAI;IACF,MAAMd,8BAA8B,CAACW,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;IAC3DC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACC,OAAO,CAAC;EACrD;AACF,CAAC;;AAED;AACA,MAAMC,WAAW,GAAG,MAAAA,CAAON,KAAK,EAAEC,QAAQ,KAAK;EAC7C,IAAI;IACF,MAAMf,0BAA0B,CAACY,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;IACvDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACC,OAAO,CAAC;EAC/C;AACF,CAAC;;AAED;AACA,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACF,MAAMnB,OAAO,CAACU,IAAI,CAAC;IACnBI,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACC,OAAO,CAAC;EAChD;AACF,CAAC;;AAED;AACApB,kBAAkB,CAACa,IAAI,EAAGU,IAAI,IAAK;EACjC,IAAIA,IAAI,EAAE;IACRN,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEK,IAAI,CAAC;EAChD,CAAC,MAAM;IACLN,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C;AACF,CAAC,CAAC;AAEF,SAASL,IAAI,EAAEC,cAAc,EAAEO,WAAW,EAAEC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}