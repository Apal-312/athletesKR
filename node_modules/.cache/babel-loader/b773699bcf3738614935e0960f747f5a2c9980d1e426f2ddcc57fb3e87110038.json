{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR/src/components/context/AuthContextProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"./firebase\"; // импортируйте auth из вашего firebase.js (или куда вы поместили инициализацию Firebase)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(authContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Функция регистрации\n  const handleRegister = async () => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setEmail(\"\"); // Очистить поле email\n      setPassword(\"\"); // Очистить поле password\n      navigate(\"/\"); // Перенаправить на главную\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(error.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(error.message);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Функция входа\n  const handleLogin = async () => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail(\"\"); // Очистить поле email\n      setPassword(\"\"); // Очистить поле password\n      navigate(\"/\"); // Перенаправить на главную\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/user-disabled\":\n        case \"auth/invalid-email\":\n        case \"auth/user-not-found\":\n          setEmailError(error.message);\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(error.message);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Функция выхода\n  const handleLogOut = async () => {\n    await signOut(auth);\n    navigate(\"/\"); // Перенаправить на главную после выхода\n  };\n\n  // Слушатель состояния аутентификации\n  const authListener = () => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      email,\n      setEmail,\n      password,\n      setPassword,\n      user,\n      loading,\n      emailError,\n      passwordError,\n      handleRegister,\n      handleLogin,\n      handleLogOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthContextProvider, \"owza3ObJww5PfCAX08UPRdWkhGc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","useNavigate","auth","jsxDEV","_jsxDEV","authContext","useAuth","_s","AuthContextProvider","children","_s2","email","setEmail","password","setPassword","user","setUser","loading","setLoading","emailError","setEmailError","passwordError","setPasswordError","navigate","handleRegister","error","code","message","handleLogin","handleLogOut","authListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR/src/components/context/AuthContextProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n} from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"./firebase\"; // импортируйте auth из вашего firebase.js (или куда вы поместили инициализацию Firebase)\n\nconst authContext = createContext();\n\nexport const useAuth = () => useContext(authContext);\n\nconst AuthContextProvider = ({ children }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Функция регистрации\n  const handleRegister = async () => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setEmail(\"\"); // Очистить поле email\n      setPassword(\"\"); // Очистить поле password\n      navigate(\"/\"); // Перенаправить на главную\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(error.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(error.message);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Функция входа\n  const handleLogin = async () => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setEmail(\"\"); // Очистить поле email\n      setPassword(\"\"); // Очистить поле password\n      navigate(\"/\"); // Перенаправить на главную\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/user-disabled\":\n        case \"auth/invalid-email\":\n        case \"auth/user-not-found\":\n          setEmailError(error.message);\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(error.message);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Функция выхода\n  const handleLogOut = async () => {\n    await signOut(auth);\n    navigate(\"/\"); // Перенаправить на главную после выхода\n  };\n\n  // Слушатель состояния аутентификации\n  const authListener = () => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <authContext.Provider\n      value={{\n        email,\n        setEmail,\n        password,\n        setPassword,\n        user,\n        loading,\n        emailError,\n        passwordError,\n        handleRegister,\n        handleLogin,\n        handleLogOut,\n      }}\n    >\n      {children}\n    </authContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}