{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR/src/components/context/AuthContextProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport fire from \"../../fire\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Создаем контекст авторизации\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authContext = /*#__PURE__*/createContext();\n\n// Кастомный хук для использования контекста авторизации\nexport const useAuth = () => {\n  _s();\n  return useContext(authContext);\n};\n\n// Компонент провайдера контекста авторизации\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n  // Состояния для управления формой и пользователем\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const navigate = useNavigate(); // Хук для навигации\n\n  // Функция для регистрации пользователя\n  const handleRegister = async () => {\n    try {\n      await fire.auth().createUserWithEmailAndPassword(email, password);\n      setEmail(\"\"); // Сбрасываем значение email\n      setPassword(\"\"); // Сбрасываем значение password\n      navigate(\"/\"); // Перенаправляем пользователя после успешной регистрации\n    } catch (error) {\n      console.log(\"Ошибка регистрации:\", error.message); // Логируем ошибку\n      switch (error.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(error.message); // Устанавливаем сообщение об ошибке email\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(error.message); // Устанавливаем сообщение об ошибке пароля\n          break;\n        default:\n          setEmailError(\"Произошла ошибка. Попробуйте позже.\");\n          break;\n      }\n    }\n  };\n\n  // Функция для входа пользователя\n  const handleLogin = async () => {\n    console.log(\"Email:\", email); // Логируем email для отладки\n    console.log(\"Password:\", password); // Логируем пароль для отладки\n\n    try {\n      await fire.auth().signInWithEmailAndPassword(email, password);\n      setEmail(\"\"); // Сбрасываем значение email\n      setPassword(\"\"); // Сбрасываем значение password\n      navigate(\"/\"); // Перенаправляем пользователя после успешного входа\n    } catch (error) {\n      console.log(\"Ошибка входа:\", error.message); // Логируем ошибку\n      switch (error.code) {\n        case \"auth/user-disabled\":\n          setEmailError(\"Аккаунт заблокирован.\");\n          break;\n        case \"auth/invalid-email\":\n          setEmailError(\"Неверный формат email.\");\n          break;\n        case \"auth/user-not-found\":\n          setEmailError(\"Пользователь с таким email не найден.\");\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(\"Неверный пароль.\");\n          break;\n        default:\n          setEmailError(\"Произошла ошибка. Попробуйте позже.\");\n          break;\n      }\n    }\n  };\n\n  // Функция для выхода пользователя\n  const handleLogOut = async () => {\n    await fire.auth().signOut();\n    navigate(\"/\"); // Перенаправляем пользователя после выхода\n  };\n\n  // Функция для отслеживания состояния авторизации пользователя\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"Пользователь авторизован:\", user); // Логируем информацию о пользователе\n        setUser(user);\n      } else {\n        console.log(\"Пользователь не авторизован\");\n        setUser(null);\n      }\n      setLoading(false); // Устанавливаем флаг загрузки\n    });\n  };\n\n  // Используем хук useEffect для вызова authListener при монтировании компонента\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  // Возвращаем провайдер контекста с передаваемыми значениями и оборачиваем в него дочерние компоненты\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      email,\n      setEmail,\n      password,\n      setPassword,\n      user,\n      loading,\n      emailError,\n      passwordError,\n      handleRegister,\n      handleLogin,\n      handleLogOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthContextProvider, \"owza3ObJww5PfCAX08UPRdWkhGc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","fire","useNavigate","jsxDEV","_jsxDEV","authContext","useAuth","_s","AuthContextProvider","children","_s2","email","setEmail","password","setPassword","user","setUser","loading","setLoading","emailError","setEmailError","passwordError","setPasswordError","navigate","handleRegister","auth","createUserWithEmailAndPassword","error","console","log","message","code","handleLogin","signInWithEmailAndPassword","handleLogOut","signOut","authListener","onAuthStateChanged","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR/src/components/context/AuthContextProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport fire from \"../../fire\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Создаем контекст авторизации\nconst authContext = createContext();\n\n// Кастомный хук для использования контекста авторизации\nexport const useAuth = () => useContext(authContext);\n\n// Компонент провайдера контекста авторизации\nconst AuthContextProvider = ({ children }) => {\n  // Состояния для управления формой и пользователем\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const navigate = useNavigate(); // Хук для навигации\n\n  // Функция для регистрации пользователя\n  const handleRegister = async () => {\n    try {\n      await fire.auth().createUserWithEmailAndPassword(email, password);\n      setEmail(\"\"); // Сбрасываем значение email\n      setPassword(\"\"); // Сбрасываем значение password\n      navigate(\"/\"); // Перенаправляем пользователя после успешной регистрации\n    } catch (error) {\n      console.log(\"Ошибка регистрации:\", error.message); // Логируем ошибку\n      switch (error.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(error.message); // Устанавливаем сообщение об ошибке email\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(error.message); // Устанавливаем сообщение об ошибке пароля\n          break;\n        default:\n          setEmailError(\"Произошла ошибка. Попробуйте позже.\");\n          break;\n      }\n    }\n  };\n\n  // Функция для входа пользователя\n  const handleLogin = async () => {\n    console.log(\"Email:\", email); // Логируем email для отладки\n    console.log(\"Password:\", password); // Логируем пароль для отладки\n\n    try {\n      await fire.auth().signInWithEmailAndPassword(email, password);\n      setEmail(\"\"); // Сбрасываем значение email\n      setPassword(\"\"); // Сбрасываем значение password\n      navigate(\"/\"); // Перенаправляем пользователя после успешного входа\n    } catch (error) {\n      console.log(\"Ошибка входа:\", error.message); // Логируем ошибку\n      switch (error.code) {\n        case \"auth/user-disabled\":\n          setEmailError(\"Аккаунт заблокирован.\");\n          break;\n        case \"auth/invalid-email\":\n          setEmailError(\"Неверный формат email.\");\n          break;\n        case \"auth/user-not-found\":\n          setEmailError(\"Пользователь с таким email не найден.\");\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(\"Неверный пароль.\");\n          break;\n        default:\n          setEmailError(\"Произошла ошибка. Попробуйте позже.\");\n          break;\n      }\n    }\n  };\n\n  // Функция для выхода пользователя\n  const handleLogOut = async () => {\n    await fire.auth().signOut();\n    navigate(\"/\"); // Перенаправляем пользователя после выхода\n  };\n\n  // Функция для отслеживания состояния авторизации пользователя\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        console.log(\"Пользователь авторизован:\", user); // Логируем информацию о пользователе\n        setUser(user);\n      } else {\n        console.log(\"Пользователь не авторизован\");\n        setUser(null);\n      }\n      setLoading(false); // Устанавливаем флаг загрузки\n    });\n  };\n\n  // Используем хук useEffect для вызова authListener при монтировании компонента\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  // Возвращаем провайдер контекста с передаваемыми значениями и оборачиваем в него дочерние компоненты\n  return (\n    <authContext.Provider\n      value={{\n        email,\n        setEmail,\n        password,\n        setPassword,\n        user,\n        loading,\n        emailError,\n        passwordError,\n        handleRegister,\n        handleLogin,\n        handleLogOut,\n      }}\n    >\n      {children}\n    </authContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMS,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,MAAME,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMwB,QAAQ,GAAGrB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMsB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMvB,IAAI,CAACwB,IAAI,CAAC,CAAC,CAACC,8BAA8B,CAACf,KAAK,EAAEE,QAAQ,CAAC;MACjED,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACjBS,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;MACnD,QAAQH,KAAK,CAACI,IAAI;QAChB,KAAK,2BAA2B;QAChC,KAAK,oBAAoB;UACvBX,aAAa,CAACO,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;UAC9B;QACF,KAAK,oBAAoB;UACvBR,gBAAgB,CAACK,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;UACjC;QACF;UACEV,aAAa,CAAC,qCAAqC,CAAC;UACpD;MACJ;IACF;EACF,CAAC;;EAED;EACA,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAElB,KAAK,CAAC,CAAC,CAAC;IAC9BiB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEhB,QAAQ,CAAC,CAAC,CAAC;;IAEpC,IAAI;MACF,MAAMZ,IAAI,CAACwB,IAAI,CAAC,CAAC,CAACQ,0BAA0B,CAACtB,KAAK,EAAEE,QAAQ,CAAC;MAC7DD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACjBS,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;MAC7C,QAAQH,KAAK,CAACI,IAAI;QAChB,KAAK,oBAAoB;UACvBX,aAAa,CAAC,uBAAuB,CAAC;UACtC;QACF,KAAK,oBAAoB;UACvBA,aAAa,CAAC,wBAAwB,CAAC;UACvC;QACF,KAAK,qBAAqB;UACxBA,aAAa,CAAC,uCAAuC,CAAC;UACtD;QACF,KAAK,qBAAqB;UACxBE,gBAAgB,CAAC,kBAAkB,CAAC;UACpC;QACF;UACEF,aAAa,CAAC,qCAAqC,CAAC;UACpD;MACJ;IACF;EACF,CAAC;;EAED;EACA,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMjC,IAAI,CAACwB,IAAI,CAAC,CAAC,CAACU,OAAO,CAAC,CAAC;IAC3BZ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;;EAED;EACA,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBnC,IAAI,CAACwB,IAAI,CAAC,CAAC,CAACY,kBAAkB,CAAEtB,IAAI,IAAK;MACvC,IAAIA,IAAI,EAAE;QACRa,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEd,IAAI,CAAC,CAAC,CAAC;QAChDC,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,MAAM;QACLa,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1Cb,OAAO,CAAC,IAAI,CAAC;MACf;MACAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACdoC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEhC,OAAA,CAACC,WAAW,CAACiC,QAAQ;IACnBC,KAAK,EAAE;MACL5B,KAAK;MACLC,QAAQ;MACRC,QAAQ;MACRC,WAAW;MACXC,IAAI;MACJE,OAAO;MACPE,UAAU;MACVE,aAAa;MACbG,cAAc;MACdQ,WAAW;MACXE;IACF,CAAE;IAAAzB,QAAA,EAEDA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,GAAA,CA/GIF,mBAAmB;EAAA,QAQNN,WAAW;AAAA;AAAA0C,EAAA,GARxBpC,mBAAmB;AAiHzB,eAAeA,mBAAmB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}