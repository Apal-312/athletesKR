{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR/src/components/context/ProductContextProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API_PRODUCTS, API_CATEGORIES } from \"../../helpers/const\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Создание контекста для продуктов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductContext = /*#__PURE__*/createContext();\nexport const useProduct = () => {\n  _s();\n  return useContext(ProductContext);\n};\n\n// Начальное состояние для редюсера\n_s(useProduct, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst INIT_STATE = {\n  athletes: [],\n  oneAthlete: {},\n  sports: [],\n  categories: []\n};\n\n// Редюсер для управления состоянием\nconst productReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case \"GET_ATHLETES\":\n      return {\n        ...state,\n        athletes: action.payload\n      };\n    case \"GET_ONE_ATHLETE\":\n      return {\n        ...state,\n        oneAthlete: action.payload\n      };\n    case \"GET_SPORTS\":\n      return {\n        ...state,\n        sports: action.payload\n      };\n    case \"GET_CATEGORIES\":\n      return {\n        ...state,\n        categories: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst ProductContextProvider = ({\n  children\n}) => {\n  _s2();\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(productReducer, INIT_STATE);\n  const [loading, setLoading] = useState(true); // Добавляем состояние загрузки\n\n  // Создание нового спортсмена\n  const createAthlete = async newAthlete => {\n    await axios.post(API_PRODUCTS, newAthlete);\n    getAthletes();\n    navigate(\"/athletes\");\n  };\n\n  // Получение всех спортсменов\n  const getAthletes = async (params = {}) => {\n    const searchParams = new URLSearchParams(params);\n    setLoading(true); // Устанавливаем загрузку в true\n    try {\n      const response = await axios.get(`${API_PRODUCTS}?${searchParams}`);\n      dispatch({\n        type: \"GET_ATHLETES\",\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(\"Error fetching athletes:\", error);\n    } finally {\n      setLoading(false); // Останавливаем загрузку после получения данных\n    }\n  };\n\n  // Удаление спортсмена\n  const deleteAthlete = async id => {\n    await axios.delete(`${API_PRODUCTS}/${id}`);\n    getAthletes();\n  };\n\n  // Получение одного спортсмена\n  const getOneAthlete = async id => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_PRODUCTS}/${id}`);\n      dispatch({\n        type: \"GET_ONE_ATHLETE\",\n        payload: data\n      });\n    } catch (error) {\n      console.error(\"Error fetching athlete details:\", error);\n    }\n  };\n\n  // Редактирование данных спортсмена\n  const editAthlete = async (id, editedAthlete) => {\n    await axios.patch(`${API_PRODUCTS}/${id}`, editedAthlete);\n    getAthletes();\n    navigate(\"/athletes\");\n  };\n\n  // Создание новой категории\n  const createSport = async newSport => {\n    await axios.post(API_CATEGORIES, newSport);\n    getSports();\n    navigate(\"/athletes\");\n  };\n\n  // Получение всех категорий\n  const getSports = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(API_CATEGORIES);\n      dispatch({\n        type: \"GET_SPORTS\",\n        payload: data\n      });\n      dispatch({\n        type: \"GET_CATEGORIES\",\n        payload: data\n      });\n    } catch (error) {\n      console.error(\"Error fetching sports:\", error);\n    }\n  };\n\n  // Фильтрация по параметрам\n  const fetchByParams = (query, value) => {\n    const search = new URLSearchParams(window.location.search);\n    if (value === \"all\") {\n      search.delete(query);\n    } else {\n      search.set(query, value);\n    }\n    const url = `${window.location.pathname}?${search}`;\n    navigate(url);\n    getAthletes(Object.fromEntries(search.entries()));\n  };\n\n  // Получение данных одного спортсмена\n  const fetchOneProduct = async id => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_PRODUCTS}/${id}`);\n      dispatch({\n        type: \"GET_ONE_ATHLETE\",\n        payload: data\n      });\n    } catch (error) {\n      console.error(\"Error fetching product details:\", error);\n    }\n  };\n\n  // Объект значений, передаваемых через контекст\n  const values = {\n    createAthlete,\n    getAthletes,\n    athletes: state.athletes,\n    deleteAthlete,\n    getOneAthlete,\n    oneAthlete: state.oneAthlete,\n    editAthlete,\n    createSport,\n    getSports,\n    sports: state.sports,\n    categories: state.categories,\n    fetchByParams,\n    fetchOneProduct,\n    loading // Добавляем информацию о загрузке\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProductContextProvider, \"YvXrkzqaN/hX8P/5DVd0fT20BDE=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductContextProvider;\nexport default ProductContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ProductContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useState","useEffect","axios","API_PRODUCTS","API_CATEGORIES","useNavigate","jsxDEV","_jsxDEV","ProductContext","useProduct","_s","INIT_STATE","athletes","oneAthlete","sports","categories","productReducer","state","action","type","payload","ProductContextProvider","children","_s2","navigate","dispatch","loading","setLoading","createAthlete","newAthlete","post","getAthletes","params","searchParams","URLSearchParams","response","get","data","error","console","deleteAthlete","id","delete","getOneAthlete","editAthlete","editedAthlete","patch","createSport","newSport","getSports","fetchByParams","query","value","search","window","location","set","url","pathname","Object","fromEntries","entries","fetchOneProduct","values","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR/src/components/context/ProductContextProvider.js"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useReducer,\n  useState,\n  useEffect,\n} from \"react\";\nimport axios from \"axios\";\nimport { API_PRODUCTS, API_CATEGORIES } from \"../../helpers/const\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Создание контекста для продуктов\nexport const ProductContext = createContext();\nexport const useProduct = () => useContext(ProductContext);\n\n// Начальное состояние для редюсера\nconst INIT_STATE = {\n  athletes: [],\n  oneAthlete: {},\n  sports: [],\n  categories: [],\n};\n\n// Редюсер для управления состоянием\nconst productReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case \"GET_ATHLETES\":\n      return { ...state, athletes: action.payload };\n    case \"GET_ONE_ATHLETE\":\n      return { ...state, oneAthlete: action.payload };\n    case \"GET_SPORTS\":\n      return { ...state, sports: action.payload };\n    case \"GET_CATEGORIES\":\n      return { ...state, categories: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst ProductContextProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(productReducer, INIT_STATE);\n  const [loading, setLoading] = useState(true); // Добавляем состояние загрузки\n\n  // Создание нового спортсмена\n  const createAthlete = async (newAthlete) => {\n    await axios.post(API_PRODUCTS, newAthlete);\n    getAthletes();\n    navigate(\"/athletes\");\n  };\n\n  // Получение всех спортсменов\n  const getAthletes = async (params = {}) => {\n    const searchParams = new URLSearchParams(params);\n    setLoading(true); // Устанавливаем загрузку в true\n    try {\n      const response = await axios.get(`${API_PRODUCTS}?${searchParams}`);\n      dispatch({ type: \"GET_ATHLETES\", payload: response.data });\n    } catch (error) {\n      console.error(\"Error fetching athletes:\", error);\n    } finally {\n      setLoading(false); // Останавливаем загрузку после получения данных\n    }\n  };\n\n  // Удаление спортсмена\n  const deleteAthlete = async (id) => {\n    await axios.delete(`${API_PRODUCTS}/${id}`);\n    getAthletes();\n  };\n\n  // Получение одного спортсмена\n  const getOneAthlete = async (id) => {\n    try {\n      const { data } = await axios.get(`${API_PRODUCTS}/${id}`);\n      dispatch({ type: \"GET_ONE_ATHLETE\", payload: data });\n    } catch (error) {\n      console.error(\"Error fetching athlete details:\", error);\n    }\n  };\n\n  // Редактирование данных спортсмена\n  const editAthlete = async (id, editedAthlete) => {\n    await axios.patch(`${API_PRODUCTS}/${id}`, editedAthlete);\n    getAthletes();\n    navigate(\"/athletes\");\n  };\n\n  // Создание новой категории\n  const createSport = async (newSport) => {\n    await axios.post(API_CATEGORIES, newSport);\n    getSports();\n    navigate(\"/athletes\");\n  };\n\n  // Получение всех категорий\n  const getSports = async () => {\n    try {\n      const { data } = await axios.get(API_CATEGORIES);\n      dispatch({ type: \"GET_SPORTS\", payload: data });\n      dispatch({ type: \"GET_CATEGORIES\", payload: data });\n    } catch (error) {\n      console.error(\"Error fetching sports:\", error);\n    }\n  };\n\n  // Фильтрация по параметрам\n  const fetchByParams = (query, value) => {\n    const search = new URLSearchParams(window.location.search);\n    if (value === \"all\") {\n      search.delete(query);\n    } else {\n      search.set(query, value);\n    }\n    const url = `${window.location.pathname}?${search}`;\n    navigate(url);\n    getAthletes(Object.fromEntries(search.entries()));\n  };\n\n  // Получение данных одного спортсмена\n  const fetchOneProduct = async (id) => {\n    try {\n      const { data } = await axios.get(`${API_PRODUCTS}/${id}`);\n      dispatch({ type: \"GET_ONE_ATHLETE\", payload: data });\n    } catch (error) {\n      console.error(\"Error fetching product details:\", error);\n    }\n  };\n\n  // Объект значений, передаваемых через контекст\n  const values = {\n    createAthlete,\n    getAthletes,\n    athletes: state.athletes,\n    deleteAthlete,\n    getOneAthlete,\n    oneAthlete: state.oneAthlete,\n    editAthlete,\n    createSport,\n    getSports,\n    sports: state.sports,\n    categories: state.categories,\n    fetchByParams,\n    fetchOneProduct,\n    loading, // Добавляем информацию о загрузке\n  };\n\n  return (\n    <ProductContext.Provider value={values}>{children}</ProductContext.Provider>\n  );\n};\n\nexport default ProductContextProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,SAAS,QACJ,OAAO;AACd,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,cAAc,QAAQ,qBAAqB;AAClE,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,cAAc,gBAAGX,aAAa,CAAC,CAAC;AAC7C,OAAO,MAAMY,UAAU,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMZ,UAAU,CAACU,cAAc,CAAC;AAAA;;AAE1D;AAAAE,EAAA,CAFaD,UAAU;AAGvB,MAAME,UAAU,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,CAAC,CAAC;EACdC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGN,UAAU,EAAEO,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGF,KAAK;QAAEL,QAAQ,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAC/C,KAAK,iBAAiB;MACpB,OAAO;QAAE,GAAGH,KAAK;QAAEJ,UAAU,EAAEK,MAAM,CAACE;MAAQ,CAAC;IACjD,KAAK,YAAY;MACf,OAAO;QAAE,GAAGH,KAAK;QAAEH,MAAM,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAC7C,KAAK,gBAAgB;MACnB,OAAO;QAAE,GAAGH,KAAK;QAAEF,UAAU,EAAEG,MAAM,CAACE;MAAQ,CAAC;IACjD;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,MAAMI,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,KAAK,EAAEQ,QAAQ,CAAC,GAAG1B,UAAU,CAACiB,cAAc,EAAEL,UAAU,CAAC;EAChE,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAM4B,aAAa,GAAG,MAAOC,UAAU,IAAK;IAC1C,MAAM3B,KAAK,CAAC4B,IAAI,CAAC3B,YAAY,EAAE0B,UAAU,CAAC;IAC1CE,WAAW,CAAC,CAAC;IACbP,QAAQ,CAAC,WAAW,CAAC;EACvB,CAAC;;EAED;EACA,MAAMO,WAAW,GAAG,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IACzC,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC;IAChDL,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,GAAGjC,YAAY,IAAI8B,YAAY,EAAE,CAAC;MACnER,QAAQ,CAAC;QAAEN,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEe,QAAQ,CAACE;MAAK,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMa,aAAa,GAAG,MAAOC,EAAE,IAAK;IAClC,MAAMvC,KAAK,CAACwC,MAAM,CAAC,GAAGvC,YAAY,IAAIsC,EAAE,EAAE,CAAC;IAC3CV,WAAW,CAAC,CAAC;EACf,CAAC;;EAED;EACA,MAAMY,aAAa,GAAG,MAAOF,EAAE,IAAK;IAClC,IAAI;MACF,MAAM;QAAEJ;MAAK,CAAC,GAAG,MAAMnC,KAAK,CAACkC,GAAG,CAAC,GAAGjC,YAAY,IAAIsC,EAAE,EAAE,CAAC;MACzDhB,QAAQ,CAAC;QAAEN,IAAI,EAAE,iBAAiB;QAAEC,OAAO,EAAEiB;MAAK,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;;EAED;EACA,MAAMM,WAAW,GAAG,MAAAA,CAAOH,EAAE,EAAEI,aAAa,KAAK;IAC/C,MAAM3C,KAAK,CAAC4C,KAAK,CAAC,GAAG3C,YAAY,IAAIsC,EAAE,EAAE,EAAEI,aAAa,CAAC;IACzDd,WAAW,CAAC,CAAC;IACbP,QAAQ,CAAC,WAAW,CAAC;EACvB,CAAC;;EAED;EACA,MAAMuB,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtC,MAAM9C,KAAK,CAAC4B,IAAI,CAAC1B,cAAc,EAAE4C,QAAQ,CAAC;IAC1CC,SAAS,CAAC,CAAC;IACXzB,QAAQ,CAAC,WAAW,CAAC;EACvB,CAAC;;EAED;EACA,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAM;QAAEZ;MAAK,CAAC,GAAG,MAAMnC,KAAK,CAACkC,GAAG,CAAChC,cAAc,CAAC;MAChDqB,QAAQ,CAAC;QAAEN,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAEiB;MAAK,CAAC,CAAC;MAC/CZ,QAAQ,CAAC;QAAEN,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAEiB;MAAK,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAMY,aAAa,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACtC,MAAMC,MAAM,GAAG,IAAInB,eAAe,CAACoB,MAAM,CAACC,QAAQ,CAACF,MAAM,CAAC;IAC1D,IAAID,KAAK,KAAK,KAAK,EAAE;MACnBC,MAAM,CAACX,MAAM,CAACS,KAAK,CAAC;IACtB,CAAC,MAAM;MACLE,MAAM,CAACG,GAAG,CAACL,KAAK,EAAEC,KAAK,CAAC;IAC1B;IACA,MAAMK,GAAG,GAAG,GAAGH,MAAM,CAACC,QAAQ,CAACG,QAAQ,IAAIL,MAAM,EAAE;IACnD7B,QAAQ,CAACiC,GAAG,CAAC;IACb1B,WAAW,CAAC4B,MAAM,CAACC,WAAW,CAACP,MAAM,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAMC,eAAe,GAAG,MAAOrB,EAAE,IAAK;IACpC,IAAI;MACF,MAAM;QAAEJ;MAAK,CAAC,GAAG,MAAMnC,KAAK,CAACkC,GAAG,CAAC,GAAGjC,YAAY,IAAIsC,EAAE,EAAE,CAAC;MACzDhB,QAAQ,CAAC;QAAEN,IAAI,EAAE,iBAAiB;QAAEC,OAAO,EAAEiB;MAAK,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;;EAED;EACA,MAAMyB,MAAM,GAAG;IACbnC,aAAa;IACbG,WAAW;IACXnB,QAAQ,EAAEK,KAAK,CAACL,QAAQ;IACxB4B,aAAa;IACbG,aAAa;IACb9B,UAAU,EAAEI,KAAK,CAACJ,UAAU;IAC5B+B,WAAW;IACXG,WAAW;IACXE,SAAS;IACTnC,MAAM,EAAEG,KAAK,CAACH,MAAM;IACpBC,UAAU,EAAEE,KAAK,CAACF,UAAU;IAC5BmC,aAAa;IACbY,eAAe;IACfpC,OAAO,CAAE;EACX,CAAC;EAED,oBACEnB,OAAA,CAACC,cAAc,CAACwD,QAAQ;IAACZ,KAAK,EAAEW,MAAO;IAAAzC,QAAA,EAAEA;EAAQ;IAAA2C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA0B,CAAC;AAEhF,CAAC;AAAC7C,GAAA,CA/GIF,sBAAsB;EAAA,QACThB,WAAW;AAAA;AAAAgE,EAAA,GADxBhD,sBAAsB;AAiH5B,eAAeA,sBAAsB;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}