{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR2/src/components/products/EditAthletes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Box, Button, TextField, Typography, CircularProgress, Card, CardContent, CardActions } from \"@mui/material\";\nimport { useProduct } from \"../context/ProductContextProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditAthletes = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Получаем параметр id из URL с помощью хука useParams\n  const {\n    fetchOneProduct,\n    editAthlete,\n    oneAthlete\n  } = useProduct(); // Получаем необходимые функции и состояния из контекста\n\n  // Состояние для хранения данных спортсмена, которые будут изменяться\n  const [product, setProduct] = useState({\n    name: \"\",\n    sport: \"\",\n    country: \"\",\n    image: \"\",\n    rating: 0\n  });\n  const [loading, setLoading] = useState(true); // Состояние для отслеживания загрузки данных\n\n  // Эффект для загрузки данных спортсмена по id при загрузке компонента\n  useEffect(() => {\n    fetchOneProduct(id).finally(() => setLoading(false)); // Добавляем setLoading, чтобы прекратить загрузку после получения данных\n  }, [id]);\n\n  // Эффект для обновления состояния product при получении данных о спортсмене\n  useEffect(() => {\n    if (oneAthlete) {\n      setProduct(oneAthlete);\n    }\n  }, [oneAthlete]);\n\n  // Обработчик изменения данных в полях ввода\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct({\n      ...product,\n      [name]: value\n    });\n  };\n\n  // Обработчик для обновления данных спортсмена\n  const handleUpdateProduct = () => {\n    editAthlete(id, product);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this); // Показываем индикатор загрузки, пока данные не загружены\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"50%\",\n      margin: \"40px auto\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        boxShadow: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          sx: {\n            marginBottom: 3\n          },\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u043F\\u043E\\u0440\\u0442\\u0441\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          label: \"\\u0418\\u043C\\u044F\",\n          variant: \"outlined\",\n          value: product.name || \"\" // Используем пустую строку, если значение undefined\n          ,\n          onChange: handleInputChange,\n          fullWidth: true,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"sport\",\n          label: \"\\u0412\\u0438\\u0434 \\u0441\\u043F\\u043E\\u0440\\u0442\\u0430\",\n          variant: \"outlined\",\n          value: product.sport || \"\",\n          onChange: handleInputChange,\n          fullWidth: true,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"country\",\n          label: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430\",\n          variant: \"outlined\",\n          value: product.country || \"\",\n          onChange: handleInputChange,\n          fullWidth: true,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"image\",\n          label: \"URL \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\",\n          variant: \"outlined\",\n          value: product.image || \"\",\n          onChange: handleInputChange,\n          fullWidth: true,\n          sx: {\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        sx: {\n          justifyContent: \"center\",\n          paddingBottom: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateProduct,\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u043F\\u043E\\u0440\\u0442\\u0441\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(EditAthletes, \"f3WAaJJ/SOPvr4HK7nNPdJPPL3k=\", false, function () {\n  return [useParams, useProduct];\n});\n_c = EditAthletes;\nexport default EditAthletes;\nvar _c;\n$RefreshReg$(_c, \"EditAthletes\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Box","Button","TextField","Typography","CircularProgress","Card","CardContent","CardActions","useProduct","jsxDEV","_jsxDEV","EditAthletes","_s","id","fetchOneProduct","editAthlete","oneAthlete","product","setProduct","name","sport","country","image","rating","loading","setLoading","finally","handleInputChange","e","value","target","handleUpdateProduct","sx","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","width","margin","display","flexDirection","gap","boxShadow","variant","align","marginBottom","label","onChange","fullWidth","justifyContent","paddingBottom","onClick","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR2/src/components/products/EditAthletes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  CircularProgress,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport { useProduct } from \"../context/ProductContextProvider\";\n\nconst EditAthletes = () => {\n  const { id } = useParams(); // Получаем параметр id из URL с помощью хука useParams\n  const { fetchOneProduct, editAthlete, oneAthlete } = useProduct(); // Получаем необходимые функции и состояния из контекста\n\n  // Состояние для хранения данных спортсмена, которые будут изменяться\n  const [product, setProduct] = useState({\n    name: \"\",\n    sport: \"\",\n    country: \"\",\n    image: \"\",\n    rating: 0,\n  });\n\n  const [loading, setLoading] = useState(true); // Состояние для отслеживания загрузки данных\n\n  // Эффект для загрузки данных спортсмена по id при загрузке компонента\n  useEffect(() => {\n    fetchOneProduct(id).finally(() => setLoading(false)); // Добавляем setLoading, чтобы прекратить загрузку после получения данных\n  }, [id]);\n\n  // Эффект для обновления состояния product при получении данных о спортсмене\n  useEffect(() => {\n    if (oneAthlete) {\n      setProduct(oneAthlete);\n    }\n  }, [oneAthlete]);\n\n  // Обработчик изменения данных в полях ввода\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProduct({\n      ...product,\n      [name]: value,\n    });\n  };\n\n  // Обработчик для обновления данных спортсмена\n  const handleUpdateProduct = () => {\n    editAthlete(id, product);\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ textAlign: \"center\", marginTop: \"20px\" }}>\n        <CircularProgress />\n      </Box>\n    ); // Показываем индикатор загрузки, пока данные не загружены\n  }\n\n  return (\n    <Box\n      sx={{\n        width: \"50%\",\n        margin: \"40px auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 3,\n      }}\n    >\n      <Card sx={{ boxShadow: 3 }}>\n        <CardContent>\n          <Typography variant=\"h4\" align=\"center\" sx={{ marginBottom: 3 }}>\n            Редактировать спортсмена\n          </Typography>\n\n          <TextField\n            name=\"name\"\n            label=\"Имя\"\n            variant=\"outlined\"\n            value={product.name || \"\"} // Используем пустую строку, если значение undefined\n            onChange={handleInputChange}\n            fullWidth\n            sx={{ marginBottom: 2 }}\n          />\n          <TextField\n            name=\"sport\"\n            label=\"Вид спорта\"\n            variant=\"outlined\"\n            value={product.sport || \"\"}\n            onChange={handleInputChange}\n            fullWidth\n            sx={{ marginBottom: 2 }}\n          />\n          <TextField\n            name=\"country\"\n            label=\"Страна\"\n            variant=\"outlined\"\n            value={product.country || \"\"}\n            onChange={handleInputChange}\n            fullWidth\n            sx={{ marginBottom: 2 }}\n          />\n          <TextField\n            name=\"image\"\n            label=\"URL изображения\"\n            variant=\"outlined\"\n            value={product.image || \"\"}\n            onChange={handleInputChange}\n            fullWidth\n            sx={{ marginBottom: 2 }}\n          />\n        </CardContent>\n\n        <CardActions sx={{ justifyContent: \"center\", paddingBottom: 3 }}>\n          <Button variant=\"contained\" onClick={handleUpdateProduct}>\n            Редактировать спортсмена\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default EditAthletes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}