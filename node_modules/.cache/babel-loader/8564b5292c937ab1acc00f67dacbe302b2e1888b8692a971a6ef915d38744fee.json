{"ast":null,"code":"import React,{useState}from\"react\";import{useAuth}from\"../components/context/AuthContextProvider\";import{useNavigate}from\"react-router-dom\";// Импортируем useNavigate\nimport\"../pages/Auth.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Auth=()=>{// Извлекаем необходимые функции и состояния из контекста авторизации\nconst{email,setEmail,password,setPassword,handleRegister,handleLogin}=useAuth();const[isRegister,setIsRegister]=useState(true);// Состояние для переключения между регистрацией и входом\nconst[name,setName]=useState(\"\");// Состояние для имени пользователя при регистрации\nconst[confirmPassword,setConfirmPassword]=useState(\"\");// Состояние для подтверждения пароля\nconst[confirmPasswordError,setConfirmPasswordError]=useState(\"\");// Ошибка для несовпадения паролей\nconst[emailError,setEmailError]=useState(\"\");// Ошибка для неверной почты\nconst[passwordError,setPasswordError]=useState(\"\");// Ошибка для неверного пароля\nconst navigate=useNavigate();// Инициализируем useNavigate для навигации по страницам\n// Обработчик отправки формы\nconst handleSubmit=e=>{e.preventDefault();// Предотвращаем стандартное поведение формы\n// Проверка совпадения паролей\nif(isRegister&&password!==confirmPassword){setConfirmPasswordError(\"Пароли не совпадают\");return;// Если пароли не совпадают, прекращаем выполнение функции\n}setConfirmPasswordError(\"\");// Сброс ошибки, если пароли совпадают\n// Очистка ошибок\nsetEmailError(\"\");setPasswordError(\"\");// Если есть значения в полях email и password\nif(email&&password){if(isRegister){handleRegister();// Если регистрация, вызываем функцию handleRegister\n}else{handleLogin();// Если вход, вызываем функцию handleLogin\n}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-section\",children:/*#__PURE__*/_jsxs(\"video\",{autoPlay:true,loop:true,muted:true,preload:\"auto\",children:[/*#__PURE__*/_jsx(\"source\",{src:\"/video/Flag_of_the_KR.mp4\",type:\"video/mp4\"}),\"\\u0412\\u0430\\u0448 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440 \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0432\\u0438\\u0434\\u0435\\u043E.\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"auth-title\",children:isRegister?\"Регистрация\":\"Вход\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[isRegister&&/*#__PURE__*/// Поле для имени пользователя отображается только при регистрации\n_jsx(\"div\",{className:\"input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",required:true,value:name,onChange:e=>setName(e.target.value)// Обновляем состояние имени\n})}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",autoFocus:true,required:true,value:email,onChange:e=>setEmail(e.target.value)// Обновляем состояние email\n}),/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:emailError}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",required:true,value:password,onChange:e=>setPassword(e.target.value)// Обновляем состояние пароля\n}),/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:passwordError}),\" \"]}),isRegister&&/*#__PURE__*/// Поле для подтверждения пароля отображается только при регистрации\n_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",required:true,value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)// Обновляем состояние confirmPassword\n}),/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:confirmPasswordError}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:isRegister?\"Регистрация\":\"Вход\"}),/*#__PURE__*/_jsxs(\"p\",{children:[isRegister?\"Уже есть аккаунт?\":\"Нет аккаунта?\",\" \",/*#__PURE__*/_jsx(\"span\",{onClick:()=>setIsRegister(!isRegister),children:isRegister?\"Вход\":\"Регистрация\"})]})]})]})]})})]});};export default Auth;","map":{"version":3,"names":["React","useState","useAuth","useNavigate","jsx","_jsx","jsxs","_jsxs","Auth","email","setEmail","password","setPassword","handleRegister","handleLogin","isRegister","setIsRegister","name","setName","confirmPassword","setConfirmPassword","confirmPasswordError","setConfirmPasswordError","emailError","setEmailError","passwordError","setPasswordError","navigate","handleSubmit","e","preventDefault","className","children","autoPlay","loop","muted","preload","src","type","onSubmit","placeholder","required","value","onChange","target","autoFocus","onClick"],"sources":["/Users/macbook/Desktop/athletesKR2/src/auth/Auth.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAuth } from \"../components/context/AuthContextProvider\";\nimport { useNavigate } from \"react-router-dom\"; // Импортируем useNavigate\nimport \"../pages/Auth.css\";\n\nconst Auth = () => {\n  // Извлекаем необходимые функции и состояния из контекста авторизации\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleRegister,\n    handleLogin,\n  } = useAuth();\n\n  const [isRegister, setIsRegister] = useState(true); // Состояние для переключения между регистрацией и входом\n  const [name, setName] = useState(\"\"); // Состояние для имени пользователя при регистрации\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // Состояние для подтверждения пароля\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\"); // Ошибка для несовпадения паролей\n  const [emailError, setEmailError] = useState(\"\"); // Ошибка для неверной почты\n  const [passwordError, setPasswordError] = useState(\"\"); // Ошибка для неверного пароля\n\n  const navigate = useNavigate(); // Инициализируем useNavigate для навигации по страницам\n\n  // Обработчик отправки формы\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Предотвращаем стандартное поведение формы\n\n    // Проверка совпадения паролей\n    if (isRegister && password !== confirmPassword) {\n      setConfirmPasswordError(\"Пароли не совпадают\");\n      return; // Если пароли не совпадают, прекращаем выполнение функции\n    }\n    setConfirmPasswordError(\"\"); // Сброс ошибки, если пароли совпадают\n\n    // Очистка ошибок\n    setEmailError(\"\");\n    setPasswordError(\"\");\n\n    // Если есть значения в полях email и password\n    if (email && password) {\n      if (isRegister) {\n        handleRegister(); // Если регистрация, вызываем функцию handleRegister\n      } else {\n        handleLogin(); // Если вход, вызываем функцию handleLogin\n      }\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"left-section\">\n        <video autoPlay loop muted preload=\"auto\">\n          <source src=\"/video/Flag_of_the_KR.mp4\" type=\"video/mp4\" />\n          Ваш браузер не поддерживает видео.\n        </video>\n      </div>\n\n      <div className=\"right-section\">\n        <div className=\"auth-form\">\n          <h2 className=\"auth-title\">{isRegister ? \"Регистрация\" : \"Вход\"}</h2>\n          <form onSubmit={handleSubmit}>\n            {isRegister && (\n              // Поле для имени пользователя отображается только при регистрации\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Ваше имя\"\n                  required\n                  value={name}\n                  onChange={(e) => setName(e.target.value)} // Обновляем состояние имени\n                />\n              </div>\n            )}\n            <div className=\"input-group\">\n              <input\n                type=\"email\"\n                placeholder=\"Электронная почта\"\n                autoFocus\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)} // Обновляем состояние email\n              />\n              <p className=\"error-msg\">{emailError}</p>{\" \"}\n              {/* Отображение ошибки email */}\n            </div>\n            <div className=\"input-group\">\n              <input\n                type=\"password\"\n                placeholder=\"Пароль\"\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)} // Обновляем состояние пароля\n              />\n              <p className=\"error-msg\">{passwordError}</p>{\" \"}\n              {/* Отображение ошибки пароля */}\n            </div>\n            {isRegister && (\n              // Поле для подтверждения пароля отображается только при регистрации\n              <div className=\"input-group\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Подтвердите пароль\"\n                  required\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)} // Обновляем состояние confirmPassword\n                />\n                <p className=\"error-msg\">{confirmPasswordError}</p>{\" \"}\n                {/* Отображение ошибки подтверждения пароля */}\n              </div>\n            )}\n            <div className=\"btn-container\">\n              <button type=\"submit\">\n                {isRegister ? \"Регистрация\" : \"Вход\"}\n              </button>\n              <p>\n                {/* Переключение между формами регистрации и входа */}\n                {isRegister ? \"Уже есть аккаунт?\" : \"Нет аккаунта?\"}{\" \"}\n                <span onClick={() => setIsRegister(!isRegister)}>\n                  {isRegister ? \"Вход\" : \"Регистрация\"}\n                </span>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}