{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR/src/components/context/ProductContextProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport { API_PRODUCTS, API_CATEGORIES } from \"../../helpers/const\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Создание контекста для продуктов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductContext = /*#__PURE__*/createContext();\nexport const useProduct = () => {\n  _s();\n  return useContext(ProductContext);\n};\n\n// Начальное состояние для редюсера\n_s(useProduct, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst INIT_STATE = {\n  athletes: [],\n  oneAthlete: {},\n  sports: [],\n  categories: []\n};\n\n// Редюсер для управления состоянием\nconst productReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case \"GET_ATHLETES\":\n      return {\n        ...state,\n        athletes: action.payload\n      };\n    case \"GET_ONE_ATHLETE\":\n      return {\n        ...state,\n        oneAthlete: action.payload\n      };\n    case \"GET_SPORTS\":\n      return {\n        ...state,\n        sports: action.payload\n      };\n    case \"GET_CATEGORIES\":\n      return {\n        ...state,\n        categories: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst ProductContextProvider = ({\n  children\n}) => {\n  _s2();\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(productReducer, INIT_STATE);\n\n  // Создание новой категории\n  const createSport = async newSport => {\n    try {\n      await axios.post(API_CATEGORIES, newSport);\n      getSports(); // Обновление списка видов спорта после добавления\n    } catch (error) {\n      console.error(\"Ошибка при добавлении категории:\", error);\n    }\n  };\n\n  // Получение всех категорий\n  const getSports = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(API_CATEGORIES);\n      dispatch({\n        type: \"GET_SPORTS\",\n        payload: data\n      });\n      dispatch({\n        type: \"GET_CATEGORIES\",\n        payload: data\n      });\n    } catch (error) {\n      console.error(\"Ошибка при получении видов спорта:\", error);\n    }\n  };\n\n  // Функции для управления спортсменами (оставлены без изменений)\n  const getAthletes = (params = {}) => {\n    const searchParams = new URLSearchParams(params);\n    axios.get(`${API_PRODUCTS}?${searchParams}`).then(response => {\n      dispatch({\n        type: \"GET_ATHLETES\",\n        payload: response.data\n      });\n    }).catch(error => {\n      console.error(\"Ошибка при получении спортсменов:\", error);\n    });\n  };\n\n  // Функции для фильтрации и получения данных\n  const fetchByParams = (query, value) => {\n    const search = new URLSearchParams(window.location.search);\n    if (value === \"all\") {\n      search.delete(query);\n    } else {\n      search.set(query, value);\n    }\n    const url = `${window.location.pathname}?${search}`;\n    navigate(url);\n    getAthletes(Object.fromEntries(search.entries()));\n  };\n\n  // Объект значений, передаваемых через контекст\n  const values = {\n    createAthlete,\n    getAthletes,\n    athletes: state.athletes,\n    deleteAthlete,\n    getOneAthlete,\n    oneAthlete: state.oneAthlete,\n    editAthlete,\n    createSport,\n    getSports,\n    sports: state.sports,\n    categories: state.categories,\n    fetchByParams,\n    fetchOneProduct\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProductContextProvider, \"37PxfHhRfLMBGwf/3LVz0x2psu4=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductContextProvider;\nexport default ProductContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ProductContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","axios","API_PRODUCTS","API_CATEGORIES","useNavigate","jsxDEV","_jsxDEV","ProductContext","useProduct","_s","INIT_STATE","athletes","oneAthlete","sports","categories","productReducer","state","action","type","payload","ProductContextProvider","children","_s2","navigate","dispatch","createSport","newSport","post","getSports","error","console","data","get","getAthletes","params","searchParams","URLSearchParams","then","response","catch","fetchByParams","query","value","search","window","location","delete","set","url","pathname","Object","fromEntries","entries","values","createAthlete","deleteAthlete","getOneAthlete","editAthlete","fetchOneProduct","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR/src/components/context/ProductContextProvider.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport axios from \"axios\";\nimport { API_PRODUCTS, API_CATEGORIES } from \"../../helpers/const\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Создание контекста для продуктов\nexport const ProductContext = createContext();\nexport const useProduct = () => useContext(ProductContext);\n\n// Начальное состояние для редюсера\nconst INIT_STATE = {\n  athletes: [],\n  oneAthlete: {},\n  sports: [],\n  categories: [],\n};\n\n// Редюсер для управления состоянием\nconst productReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case \"GET_ATHLETES\":\n      return { ...state, athletes: action.payload };\n    case \"GET_ONE_ATHLETE\":\n      return { ...state, oneAthlete: action.payload };\n    case \"GET_SPORTS\":\n      return { ...state, sports: action.payload };\n    case \"GET_CATEGORIES\":\n      return { ...state, categories: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst ProductContextProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [state, dispatch] = useReducer(productReducer, INIT_STATE);\n\n  // Создание новой категории\n  const createSport = async (newSport) => {\n    try {\n      await axios.post(API_CATEGORIES, newSport);\n      getSports(); // Обновление списка видов спорта после добавления\n    } catch (error) {\n      console.error(\"Ошибка при добавлении категории:\", error);\n    }\n  };\n\n  // Получение всех категорий\n  const getSports = async () => {\n    try {\n      const { data } = await axios.get(API_CATEGORIES);\n      dispatch({ type: \"GET_SPORTS\", payload: data });\n      dispatch({ type: \"GET_CATEGORIES\", payload: data });\n    } catch (error) {\n      console.error(\"Ошибка при получении видов спорта:\", error);\n    }\n  };\n\n  // Функции для управления спортсменами (оставлены без изменений)\n  const getAthletes = (params = {}) => {\n    const searchParams = new URLSearchParams(params);\n    axios\n      .get(`${API_PRODUCTS}?${searchParams}`)\n      .then((response) => {\n        dispatch({ type: \"GET_ATHLETES\", payload: response.data });\n      })\n      .catch((error) => {\n        console.error(\"Ошибка при получении спортсменов:\", error);\n      });\n  };\n\n  // Функции для фильтрации и получения данных\n  const fetchByParams = (query, value) => {\n    const search = new URLSearchParams(window.location.search);\n    if (value === \"all\") {\n      search.delete(query);\n    } else {\n      search.set(query, value);\n    }\n    const url = `${window.location.pathname}?${search}`;\n    navigate(url);\n    getAthletes(Object.fromEntries(search.entries()));\n  };\n\n  // Объект значений, передаваемых через контекст\n  const values = {\n    createAthlete,\n    getAthletes,\n    athletes: state.athletes,\n    deleteAthlete,\n    getOneAthlete,\n    oneAthlete: state.oneAthlete,\n    editAthlete,\n    createSport,\n    getSports,\n    sports: state.sports,\n    categories: state.categories,\n    fetchByParams,\n    fetchOneProduct,\n  };\n\n  return (\n    <ProductContext.Provider value={values}>{children}</ProductContext.Provider>\n  );\n};\n\nexport default ProductContextProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,cAAc,QAAQ,qBAAqB;AAClE,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,cAAc,gBAAGT,aAAa,CAAC,CAAC;AAC7C,OAAO,MAAMU,UAAU,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMV,UAAU,CAACQ,cAAc,CAAC;AAAA;;AAE1D;AAAAE,EAAA,CAFaD,UAAU;AAGvB,MAAME,UAAU,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,CAAC,CAAC;EACdC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGN,UAAU,EAAEO,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGF,KAAK;QAAEL,QAAQ,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAC/C,KAAK,iBAAiB;MACpB,OAAO;QAAE,GAAGH,KAAK;QAAEJ,UAAU,EAAEK,MAAM,CAACE;MAAQ,CAAC;IACjD,KAAK,YAAY;MACf,OAAO;QAAE,GAAGH,KAAK;QAAEH,MAAM,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAC7C,KAAK,gBAAgB;MACnB,OAAO;QAAE,GAAGH,KAAK;QAAEF,UAAU,EAAEG,MAAM,CAACE;MAAQ,CAAC;IACjD;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,MAAMI,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,KAAK,EAAEQ,QAAQ,CAAC,GAAGxB,UAAU,CAACe,cAAc,EAAEL,UAAU,CAAC;;EAEhE;EACA,MAAMe,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtC,IAAI;MACF,MAAMzB,KAAK,CAAC0B,IAAI,CAACxB,cAAc,EAAEuB,QAAQ,CAAC;MAC1CE,SAAS,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMD,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAM;QAAEG;MAAK,CAAC,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC7B,cAAc,CAAC;MAChDqB,QAAQ,CAAC;QAAEN,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAEY;MAAK,CAAC,CAAC;MAC/CP,QAAQ,CAAC;QAAEN,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAEY;MAAK,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;;EAED;EACA,MAAMI,WAAW,GAAGA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK;IACnC,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC;IAChDjC,KAAK,CACF+B,GAAG,CAAC,GAAG9B,YAAY,IAAIiC,YAAY,EAAE,CAAC,CACtCE,IAAI,CAAEC,QAAQ,IAAK;MAClBd,QAAQ,CAAC;QAAEN,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEmB,QAAQ,CAACP;MAAK,CAAC,CAAC;IAC5D,CAAC,CAAC,CACDQ,KAAK,CAAEV,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMW,aAAa,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACtC,MAAMC,MAAM,GAAG,IAAIP,eAAe,CAACQ,MAAM,CAACC,QAAQ,CAACF,MAAM,CAAC;IAC1D,IAAID,KAAK,KAAK,KAAK,EAAE;MACnBC,MAAM,CAACG,MAAM,CAACL,KAAK,CAAC;IACtB,CAAC,MAAM;MACLE,MAAM,CAACI,GAAG,CAACN,KAAK,EAAEC,KAAK,CAAC;IAC1B;IACA,MAAMM,GAAG,GAAG,GAAGJ,MAAM,CAACC,QAAQ,CAACI,QAAQ,IAAIN,MAAM,EAAE;IACnDpB,QAAQ,CAACyB,GAAG,CAAC;IACbf,WAAW,CAACiB,MAAM,CAACC,WAAW,CAACR,MAAM,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAMC,MAAM,GAAG;IACbC,aAAa;IACbrB,WAAW;IACXtB,QAAQ,EAAEK,KAAK,CAACL,QAAQ;IACxB4C,aAAa;IACbC,aAAa;IACb5C,UAAU,EAAEI,KAAK,CAACJ,UAAU;IAC5B6C,WAAW;IACXhC,WAAW;IACXG,SAAS;IACTf,MAAM,EAAEG,KAAK,CAACH,MAAM;IACpBC,UAAU,EAAEE,KAAK,CAACF,UAAU;IAC5B0B,aAAa;IACbkB;EACF,CAAC;EAED,oBACEpD,OAAA,CAACC,cAAc,CAACoD,QAAQ;IAACjB,KAAK,EAAEW,MAAO;IAAAhC,QAAA,EAAEA;EAAQ;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA0B,CAAC;AAEhF,CAAC;AAACzC,GAAA,CAvEIF,sBAAsB;EAAA,QACThB,WAAW;AAAA;AAAA4D,EAAA,GADxB5C,sBAAsB;AAyE5B,eAAeA,sBAAsB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}