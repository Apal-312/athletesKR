{"ast":null,"code":"import _objectSpread from\"/Users/macbook/Desktop/athletesKR2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{useProduct}from\"../context/ProductContextProvider\";import{Box,TextField,Button}from\"@mui/material\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddAthletes=()=>{// Получаем функцию createAthlete из контекста\nconst{createAthlete}=useProduct();// Локальный стейт для хранения данных о спортсмене\nconst[athlete,setAthlete]=useState({name:\"\",sport:\"\",country:\"\",image:\"\"});// Функция обработки изменений в полях ввода\nconst handleChange=e=>{setAthlete(_objectSpread(_objectSpread({},athlete),{},{[e.target.name]:e.target.value}));};// Функция отправки формы\nconst handleSubmit=e=>{e.preventDefault();// Предотвращаем перезагрузку страницы\ncreateAthlete(athlete);// Вызываем функцию создания спортсмена\n// Очищаем форму после добавления\nsetAthlete({name:\"\",sport:\"\",country:\"\",image:\"\"});};return/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,sx:{width:\"420px\",height:\"350px\",padding:2,border:\"1px solid black\",borderRadius:1,margin:\"180px\",backgroundColor:\"#ADE8FE\",color:\"#01263a\",display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",marginLeft:\"300px\",float:\"left\",\"@media (max-width: 1200px)\":{width:\"350px\",marginLeft:\"200px\"},\"@media (max-width: 992px)\":{width:\"300px\",marginLeft:\"50px\"},\"@media (max-width: 768px)\":{width:\"270px\",marginLeft:\"20px\"},\"@media (max-width: 480px)\":{width:\"220px\",marginLeft:\"10px\"},\"@media (max-width: 320px)\":{width:\"200px\",marginLeft:\"5px\"}},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"text\",name:\"name\",value:athlete.name,onChange:handleChange,label:\"\\u0418\\u043C\\u044F\",sx:{marginBottom:\"16px\",backgroundColor:\"#b5ffe1\"}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"text\",name:\"sport\",value:athlete.sport,onChange:handleChange,label:\"\\u0412\\u0438\\u0434 \\u0441\\u043F\\u043E\\u0440\\u0442\\u0430\",sx:{marginBottom:\"16px\",backgroundColor:\"#b5ffe1\"}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"text\",name:\"country\",value:athlete.country,onChange:handleChange,label:\"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430\",sx:{marginBottom:\"16px\",backgroundColor:\"#b5ffe1\"}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,minRows:3,name:\"image\",value:athlete.image,onChange:handleChange,label:\"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 URL \\u043D\\u0430 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\",sx:{marginBottom:\"16px\",backgroundColor:\"#b5ffe1\"}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"success\",children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043F\\u043E\\u0440\\u0442\\u0441\\u043C\\u0435\\u043D\\u0430\"})]});};export default AddAthletes;","map":{"version":3,"names":["React","useState","useProduct","Box","TextField","Button","jsx","_jsx","jsxs","_jsxs","AddAthletes","createAthlete","athlete","setAthlete","name","sport","country","image","handleChange","e","_objectSpread","target","value","handleSubmit","preventDefault","component","onSubmit","sx","width","height","padding","border","borderRadius","margin","backgroundColor","color","display","flexDirection","justifyContent","marginLeft","float","children","fullWidth","type","onChange","label","marginBottom","minRows","variant"],"sources":["/Users/macbook/Desktop/athletesKR2/src/components/products/AddAthletes.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useProduct } from \"../context/ProductContextProvider\";\nimport { Box, TextField, Button } from \"@mui/material\";\n\nconst AddAthletes = () => {\n  // Получаем функцию createAthlete из контекста\n  const { createAthlete } = useProduct();\n\n  // Локальный стейт для хранения данных о спортсмене\n  const [athlete, setAthlete] = useState({\n    name: \"\",\n    sport: \"\",\n    country: \"\",\n    image: \"\",\n  });\n\n  // Функция обработки изменений в полях ввода\n  const handleChange = (e) => {\n    setAthlete({ ...athlete, [e.target.name]: e.target.value });\n  };\n\n  // Функция отправки формы\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Предотвращаем перезагрузку страницы\n    createAthlete(athlete); // Вызываем функцию создания спортсмена\n    // Очищаем форму после добавления\n    setAthlete({\n      name: \"\",\n      sport: \"\",\n      country: \"\",\n      image: \"\",\n    });\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        width: \"420px\",\n        height: \"350px\",\n        padding: 2,\n        border: \"1px solid black\",\n        borderRadius: 1,\n        margin: \"180px\",\n        backgroundColor: \"#ADE8FE\",\n        color: \"#01263a\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        marginLeft: \"300px\",\n        float: \"left\",\n        \"@media (max-width: 1200px)\": {\n          width: \"350px\",\n          marginLeft: \"200px\",\n        },\n        \"@media (max-width: 992px)\": {\n          width: \"300px\",\n          marginLeft: \"50px\",\n        },\n        \"@media (max-width: 768px)\": {\n          width: \"270px\",\n          marginLeft: \"20px\",\n        },\n        \"@media (max-width: 480px)\": {\n          width: \"220px\",\n          marginLeft: \"10px\",\n        },\n        \"@media (max-width: 320px)\": {\n          width: \"200px\",\n          marginLeft: \"5px\",\n        },\n      }}\n    >\n      {/* Поле ввода имени спортсмена */}\n      <TextField\n        fullWidth\n        type=\"text\"\n        name=\"name\"\n        value={athlete.name}\n        onChange={handleChange}\n        label=\"Имя\"\n        sx={{ marginBottom: \"16px\", backgroundColor: \"#b5ffe1\" }}\n      />\n      {/* Поле ввода вида спорта */}\n      <TextField\n        fullWidth\n        type=\"text\"\n        name=\"sport\"\n        value={athlete.sport}\n        onChange={handleChange}\n        label=\"Вид спорта\"\n        sx={{ marginBottom: \"16px\", backgroundColor: \"#b5ffe1\" }}\n      />\n      {/* Поле ввода страны спортсмена */}\n      <TextField\n        fullWidth\n        type=\"text\"\n        name=\"country\"\n        value={athlete.country}\n        onChange={handleChange}\n        label=\"Страна\"\n        sx={{ marginBottom: \"16px\", backgroundColor: \"#b5ffe1\" }}\n      />\n      {/* Поле ввода URL изображения спортсмена */}\n      <TextField\n        fullWidth\n        minRows={3}\n        name=\"image\"\n        value={athlete.image}\n        onChange={handleChange}\n        label=\"Ссылка URL на изображение\"\n        sx={{ marginBottom: \"16px\", backgroundColor: \"#b5ffe1\" }}\n      />\n      {/* Кнопка для добавления спортсмена */}\n      <Button type=\"submit\" variant=\"contained\" color=\"success\">\n        Добавить спортсмена\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddAthletes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}