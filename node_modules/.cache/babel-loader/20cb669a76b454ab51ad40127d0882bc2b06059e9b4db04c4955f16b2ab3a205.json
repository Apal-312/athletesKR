{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR/src/components/context/AuthContextProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport fire from \"../../fire\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Создаем контекст авторизации\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authContext = /*#__PURE__*/createContext();\n\n// Кастомный хук для использования контекста авторизации\nexport const useAuth = () => {\n  _s();\n  return useContext(authContext);\n};\n\n// Компонент провайдера контекста авторизации\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n  // Состояния для email, password, пользователя, загрузки и ошибок\n  const [email, setEmail] = useState(\"\"); // Состояние для хранения email\n  const [password, setPassword] = useState(\"\"); // Состояние для хранения пароля\n  const [user, setUser] = useState(null); // Состояние для хранения текущего пользователя\n  const [loading, setLoading] = useState(true); // Состояние для отслеживания загрузки\n  const [emailError, setEmailError] = useState(\"\"); // Состояние для хранения ошибки email\n  const [passwordError, setPasswordError] = useState(\"\"); // Состояние для хранения ошибки пароля\n  const navigate = useNavigate(); // Используем useNavigate для перенаправления\n\n  // Функция для регистрации пользователя\n  const handleRegister = async () => {\n    try {\n      // Попытка регистрации пользователя с email и password\n      await fire.auth().createUserWithEmailAndPassword(email, password);\n      setEmail(\"\"); // Сбрасываем значение email\n      setPassword(\"\"); // Сбрасываем значение password\n      navigate(\"/\"); // Перенаправляем пользователя после успешной регистрации\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/email-already-in-use\": // Если email уже используется\n        case \"auth/invalid-email\":\n          // Если email невалиден\n          setEmailError(error.message); // Устанавливаем ошибку для email\n          break;\n        case \"auth/weak-password\":\n          // Если пароль слишком слабый\n          setPasswordError(error.message); // Устанавливаем ошибку для пароля\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Функция для входа пользователя\n  const handleLogin = async () => {\n    try {\n      await fire.auth().signInWithEmailAndPassword(email, password);\n      setEmail(\"\"); // Сбрасываем значение email\n      setPassword(\"\"); // Сбрасываем значение password\n      navigate(\"/\"); // Перенаправляем пользователя после успешного входа\n    } catch (error) {\n      // Обработка ошибок входа\n      switch (error.code) {\n        case \"auth/user-disabled\": // Если аккаунт заблокирован\n        case \"auth/invalid-email\": // Если email невалиден\n        case \"auth/user-not-found\":\n          // Если пользователь не найден\n          setEmailError(error.message); // Устанавливаем ошибку для email\n          break;\n        case \"auth/wrong-password\":\n          // Если неправильный пароль\n          setPasswordError(error.message); // Устанавливаем ошибку для пароля\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Функция для выхода пользователя\n  const handleLogOut = async () => {\n    try {\n      // Попытка выхода из системы\n      await fire.auth().signOut();\n      navigate(\"/\"); // Перенаправляем пользователя после выхода\n    } catch (error) {\n      console.error(\"Error logging out: \", error.message); // Логируем ошибку при выходе\n    }\n  };\n\n  // Функция для отслеживания состояния авторизации пользователя\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user); // Если пользователь авторизован, устанавливаем его в состояние\n      } else {\n        setUser(null); // Если пользователь не авторизован, очищаем состояние\n      }\n      setLoading(false); // Останавливаем загрузку после получения состояния авторизации\n    });\n  };\n\n  // Используем useEffect для запуска отслеживания состояния авторизации\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      email,\n      setEmail,\n      password,\n      setPassword,\n      user,\n      loading,\n      emailError,\n      passwordError,\n      handleRegister,\n      handleLogin,\n      handleLogOut // Передаем handleLogOut в контекст\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthContextProvider, \"owza3ObJww5PfCAX08UPRdWkhGc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","fire","useNavigate","jsxDEV","_jsxDEV","authContext","useAuth","_s","AuthContextProvider","children","_s2","email","setEmail","password","setPassword","user","setUser","loading","setLoading","emailError","setEmailError","passwordError","setPasswordError","navigate","handleRegister","auth","createUserWithEmailAndPassword","error","code","message","handleLogin","signInWithEmailAndPassword","handleLogOut","signOut","console","authListener","onAuthStateChanged","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR/src/components/context/AuthContextProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport fire from \"../../fire\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Создаем контекст авторизации\nconst authContext = createContext();\n\n// Кастомный хук для использования контекста авторизации\nexport const useAuth = () => useContext(authContext);\n\n// Компонент провайдера контекста авторизации\nconst AuthContextProvider = ({ children }) => {\n  // Состояния для email, password, пользователя, загрузки и ошибок\n  const [email, setEmail] = useState(\"\"); // Состояние для хранения email\n  const [password, setPassword] = useState(\"\"); // Состояние для хранения пароля\n  const [user, setUser] = useState(null); // Состояние для хранения текущего пользователя\n  const [loading, setLoading] = useState(true); // Состояние для отслеживания загрузки\n  const [emailError, setEmailError] = useState(\"\"); // Состояние для хранения ошибки email\n  const [passwordError, setPasswordError] = useState(\"\"); // Состояние для хранения ошибки пароля\n  const navigate = useNavigate(); // Используем useNavigate для перенаправления\n\n  // Функция для регистрации пользователя\n  const handleRegister = async () => {\n    try {\n      // Попытка регистрации пользователя с email и password\n      await fire.auth().createUserWithEmailAndPassword(email, password);\n      setEmail(\"\"); // Сбрасываем значение email\n      setPassword(\"\"); // Сбрасываем значение password\n      navigate(\"/\"); // Перенаправляем пользователя после успешной регистрации\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/email-already-in-use\": // Если email уже используется\n        case \"auth/invalid-email\": // Если email невалиден\n          setEmailError(error.message); // Устанавливаем ошибку для email\n          break;\n        case \"auth/weak-password\": // Если пароль слишком слабый\n          setPasswordError(error.message); // Устанавливаем ошибку для пароля\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Функция для входа пользователя\n  const handleLogin = async () => {\n    try {\n      await fire.auth().signInWithEmailAndPassword(email, password);\n      setEmail(\"\"); // Сбрасываем значение email\n      setPassword(\"\"); // Сбрасываем значение password\n      navigate(\"/\"); // Перенаправляем пользователя после успешного входа\n    } catch (error) {\n      // Обработка ошибок входа\n      switch (error.code) {\n        case \"auth/user-disabled\": // Если аккаунт заблокирован\n        case \"auth/invalid-email\": // Если email невалиден\n        case \"auth/user-not-found\": // Если пользователь не найден\n          setEmailError(error.message); // Устанавливаем ошибку для email\n          break;\n        case \"auth/wrong-password\": // Если неправильный пароль\n          setPasswordError(error.message); // Устанавливаем ошибку для пароля\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Функция для выхода пользователя\n  const handleLogOut = async () => {\n    try {\n      // Попытка выхода из системы\n      await fire.auth().signOut();\n      navigate(\"/\"); // Перенаправляем пользователя после выхода\n    } catch (error) {\n      console.error(\"Error logging out: \", error.message); // Логируем ошибку при выходе\n    }\n  };\n\n  // Функция для отслеживания состояния авторизации пользователя\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user); // Если пользователь авторизован, устанавливаем его в состояние\n      } else {\n        setUser(null); // Если пользователь не авторизован, очищаем состояние\n      }\n      setLoading(false); // Останавливаем загрузку после получения состояния авторизации\n    });\n  };\n\n  // Используем useEffect для запуска отслеживания состояния авторизации\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <authContext.Provider\n      value={{\n        email,\n        setEmail,\n        password,\n        setPassword,\n        user,\n        loading,\n        emailError,\n        passwordError,\n        handleRegister,\n        handleLogin,\n        handleLogOut, // Передаем handleLogOut в контекст\n      }}\n    >\n      {children} {/* Отображаем дочерние компоненты */}\n    </authContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}