{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR2/src/components/products/ProductList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport ProductCard from \"./ProductCard\"; // Компонент для отображения карточки продукта\nimport SideBar from \"./SideBar\"; // Компонент для отображения бокового меню\nimport PaginationControlled from \"./Pagination\"; // Компонент для пагинации\nimport { useProduct } from \"../context/ProductContextProvider\"; // Хук для доступа к контексту продуктов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const {\n    getAthletes,\n    athletes: athleteData\n  } = useProduct(); // Получаем функцию getAthletes и данные спортсменов (athletes)\n\n  const [page, setPage] = useState(1); // Состояние для текущей страницы пагинации\n\n  // Эффект для загрузки данных при первом рендере компонента\n  useEffect(() => {\n    getAthletes(); // Загружаем список спортсменов\n  }, []);\n  const itemPerPage = 8; // Количество элементов на одной странице\n\n  // Вычисляем количество страниц для пагинации\n  const count = Math.ceil(athleteData.length / itemPerPage);\n\n  // Функция для получения данных для текущей страницы\n  const currentData = () => {\n    const beginIndex = (page - 1) * itemPerPage; // Индекс начала текущей страницы\n    const endIndex = beginIndex + itemPerPage; // Индекс конца текущей страницы\n    return athleteData.slice(beginIndex, endIndex); // Возвращаем данные для текущей страницы\n  };\n\n  // Функция для изменения страницы при клике на пагинацию\n  const handleChange = (event, value) => {\n    setPage(value); // Обновляем состояние текущей страницы\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      width: \"100%\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        // Центрируем карточки продуктов\n        marginTop: \"20px\" // Отступ сверху\n      },\n      children: currentData().map(athlete => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: athlete\n      }, athlete.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) // Для каждого спортсмена отображаем его карточку\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(PaginationControlled, {\n        page: page // Текущая страница\n        ,\n        count: count // Количество страниц\n        ,\n        handleChange: handleChange // Функция изменения страницы\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"5f+R/0TIsF4aLnHLKA1oPBkQpAY=\", false, function () {\n  return [useProduct];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","ProductCard","SideBar","PaginationControlled","useProduct","jsxDEV","_jsxDEV","ProductList","_s","getAthletes","athletes","athleteData","page","setPage","itemPerPage","count","Math","ceil","length","currentData","beginIndex","endIndex","slice","handleChange","event","value","sx","display","width","flexDirection","children","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","flexWrap","justifyContent","marginTop","map","athlete","product","id","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR2/src/components/products/ProductList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport ProductCard from \"./ProductCard\"; // Компонент для отображения карточки продукта\nimport SideBar from \"./SideBar\"; // Компонент для отображения бокового меню\nimport PaginationControlled from \"./Pagination\"; // Компонент для пагинации\nimport { useProduct } from \"../context/ProductContextProvider\"; // Хук для доступа к контексту продуктов\n\nconst ProductList = () => {\n  const { getAthletes, athletes: athleteData } = useProduct(); // Получаем функцию getAthletes и данные спортсменов (athletes)\n\n  const [page, setPage] = useState(1); // Состояние для текущей страницы пагинации\n\n  // Эффект для загрузки данных при первом рендере компонента\n  useEffect(() => {\n    getAthletes(); // Загружаем список спортсменов\n  }, []);\n\n  const itemPerPage = 8; // Количество элементов на одной странице\n\n  // Вычисляем количество страниц для пагинации\n  const count = Math.ceil(athleteData.length / itemPerPage);\n\n  // Функция для получения данных для текущей страницы\n  const currentData = () => {\n    const beginIndex = (page - 1) * itemPerPage; // Индекс начала текущей страницы\n    const endIndex = beginIndex + itemPerPage; // Индекс конца текущей страницы\n    return athleteData.slice(beginIndex, endIndex); // Возвращаем данные для текущей страницы\n  };\n\n  // Функция для изменения страницы при клике на пагинацию\n  const handleChange = (event, value) => {\n    setPage(value); // Обновляем состояние текущей страницы\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", width: \"100%\", flexDirection: \"column\" }}>\n      <Box sx={{ display: \"flex\", width: \"100%\" }}>\n        <SideBar /> {/* Отображаем боковую панель для фильтрации или поиска */}\n      </Box>\n\n      <Box\n        sx={{\n          flexGrow: 1,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\", // Центрируем карточки продуктов\n          marginTop: \"20px\", // Отступ сверху\n        }}\n      >\n        {/* Отображаем карточки продуктов для текущей страницы */}\n        {currentData().map((athlete) => (\n          <ProductCard key={athlete.id} product={athlete} /> // Для каждого спортсмена отображаем его карточку\n        ))}\n      </Box>\n\n      <Box\n        sx={{ display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}\n      >\n        {/* Отображаем пагинацию с текущей страницей и количеством страниц */}\n        <PaginationControlled\n          page={page} // Текущая страница\n          count={count} // Количество страниц\n          handleChange={handleChange} // Функция изменения страницы\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProductList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AACzC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AACjC,OAAOC,oBAAoB,MAAM,cAAc,CAAC,CAAC;AACjD,SAASC,UAAU,QAAQ,mCAAmC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,WAAW;IAAEC,QAAQ,EAAEC;EAAY,CAAC,GAAGP,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE7D,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErC;EACAD,SAAS,CAAC,MAAM;IACdY,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,WAAW,GAAG,CAAC,CAAC,CAAC;;EAEvB;EACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,IAAI,CAACN,WAAW,CAACO,MAAM,GAAGJ,WAAW,CAAC;;EAEzD;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAG,CAACR,IAAI,GAAG,CAAC,IAAIE,WAAW,CAAC,CAAC;IAC7C,MAAMO,QAAQ,GAAGD,UAAU,GAAGN,WAAW,CAAC,CAAC;IAC3C,OAAOH,WAAW,CAACW,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC,CAAC,CAAC;EAClD,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACrCZ,OAAO,CAACY,KAAK,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,oBACEnB,OAAA,CAACP,GAAG;IAAC2B,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnExB,OAAA,CAACP,GAAG;MAAC2B,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAE,QAAA,gBAC1CxB,OAAA,CAACJ,OAAO;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEN5B,OAAA,CAACP,GAAG;MACF2B,EAAE,EAAE;QACFS,QAAQ,EAAE,CAAC;QACXR,OAAO,EAAE,MAAM;QACfS,QAAQ,EAAE,MAAM;QAChBC,cAAc,EAAE,QAAQ;QAAE;QAC1BC,SAAS,EAAE,MAAM,CAAE;MACrB,CAAE;MAAAR,QAAA,EAGDX,WAAW,CAAC,CAAC,CAACoB,GAAG,CAAEC,OAAO,iBACzBlC,OAAA,CAACL,WAAW;QAAkBwC,OAAO,EAAED;MAAQ,GAA7BA,OAAO,CAACE,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAAC,CAAC;MACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN5B,OAAA,CAACP,GAAG;MACF2B,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEU,cAAc,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,eAGrExB,OAAA,CAACH,oBAAoB;QACnBS,IAAI,EAAEA,IAAK,CAAC;QAAA;QACZG,KAAK,EAAEA,KAAM,CAAC;QAAA;QACdQ,YAAY,EAAEA,YAAa,CAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5DID,WAAW;EAAA,QACgCH,UAAU;AAAA;AAAAuC,EAAA,GADrDpC,WAAW;AA8DjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}