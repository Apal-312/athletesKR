{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR2/src/components/context/FavoriteContextProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useReducer } from \"react\";\n\n// Создаем контекст для избранных атлетов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteContext = /*#__PURE__*/createContext();\n\n// Хук для использования контекста избранных атлетов\nexport const useFavorite = () => {\n  _s();\n  return useContext(FavoriteContext);\n};\n\n// Начальное состояние для редьюсера избранных атлетов\n_s(useFavorite, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst INIT_STATE = {\n  favoriteAthletes: [] // Пустой массив избранных атлетов\n};\n\n// Редьюсер для управления состоянием избранных атлетов\nconst favoriteReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_FAVORITE\":\n      // Добавление атлета в избранные\n      return {\n        ...state,\n        favoriteAthletes: [...state.favoriteAthletes, action.payload]\n      };\n    case \"REMOVE_FROM_FAVORITE\":\n      // Удаление атлета из избранных\n      return {\n        ...state,\n        favoriteAthletes: state.favoriteAthletes.filter(athlete => athlete.id !== action.payload)\n      };\n    case \"SET_FAVORITES\":\n      // Установка всех избранных атлетов\n      return {\n        ...state,\n        favoriteAthletes: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Провайдер контекста для избранных атлетов\nconst FavoriteContextProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(favoriteReducer, INIT_STATE);\n\n  // Загрузка избранных атлетов из локального хранилища при инициализации\n  useEffect(() => {\n    const favoritesFromStorage = JSON.parse(localStorage.getItem(\"favoriteAthletes\"));\n    if (favoritesFromStorage) {\n      dispatch({\n        type: \"SET_FAVORITES\",\n        payload: favoritesFromStorage\n      });\n    }\n  }, []);\n\n  // Сохранение избранных атлетов в локальное хранилище при обновлении состояния\n  useEffect(() => {\n    localStorage.setItem(\"favoriteAthletes\", JSON.stringify(state.favoriteAthletes));\n  }, [state.favoriteAthletes]);\n\n  // Функция для добавления атлета в избранные\n  const addAthleteToFavorite = athlete => {\n    dispatch({\n      type: \"ADD_TO_FAVORITE\",\n      payload: athlete\n    });\n  };\n\n  // Функция для удаления атлета из избранных\n  const removeAthleteFromFavorite = id => {\n    dispatch({\n      type: \"REMOVE_FROM_FAVORITE\",\n      payload: id\n    });\n  };\n\n  // Функция для проверки, есть ли атлет в избранных\n  const isAthleteInFavorite = id => {\n    return state.favoriteAthletes.some(athlete => athlete.id === id);\n  };\n\n  // Значения контекста, доступные для компонентов\n  const values = {\n    addAthleteToFavorite,\n    removeAthleteFromFavorite,\n    isAthleteInFavorite,\n    favoriteAthletes: state.favoriteAthletes\n  };\n\n  // Возвращаем провайдер контекста с доступными значениями\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s2(FavoriteContextProvider, \"RCSvGxgXJlQZdiITbm0HQe4TAVQ=\");\n_c = FavoriteContextProvider;\nexport default FavoriteContextProvider;\nvar _c;\n$RefreshReg$(_c, \"FavoriteContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useReducer","jsxDEV","_jsxDEV","FavoriteContext","useFavorite","_s","INIT_STATE","favoriteAthletes","favoriteReducer","state","action","type","payload","filter","athlete","id","FavoriteContextProvider","children","_s2","dispatch","favoritesFromStorage","JSON","parse","localStorage","getItem","setItem","stringify","addAthleteToFavorite","removeAthleteFromFavorite","isAthleteInFavorite","some","values","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR2/src/components/context/FavoriteContextProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from \"react\";\n\n// Создаем контекст для избранных атлетов\nconst FavoriteContext = createContext();\n\n// Хук для использования контекста избранных атлетов\nexport const useFavorite = () => useContext(FavoriteContext);\n\n// Начальное состояние для редьюсера избранных атлетов\nconst INIT_STATE = {\n  favoriteAthletes: [], // Пустой массив избранных атлетов\n};\n\n// Редьюсер для управления состоянием избранных атлетов\nconst favoriteReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_FAVORITE\":\n      // Добавление атлета в избранные\n      return {\n        ...state,\n        favoriteAthletes: [...state.favoriteAthletes, action.payload],\n      };\n    case \"REMOVE_FROM_FAVORITE\":\n      // Удаление атлета из избранных\n      return {\n        ...state,\n        favoriteAthletes: state.favoriteAthletes.filter(\n          (athlete) => athlete.id !== action.payload\n        ),\n      };\n    case \"SET_FAVORITES\":\n      // Установка всех избранных атлетов\n      return {\n        ...state,\n        favoriteAthletes: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n// Провайдер контекста для избранных атлетов\nconst FavoriteContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(favoriteReducer, INIT_STATE);\n\n  // Загрузка избранных атлетов из локального хранилища при инициализации\n  useEffect(() => {\n    const favoritesFromStorage = JSON.parse(\n      localStorage.getItem(\"favoriteAthletes\")\n    );\n    if (favoritesFromStorage) {\n      dispatch({ type: \"SET_FAVORITES\", payload: favoritesFromStorage });\n    }\n  }, []);\n\n  // Сохранение избранных атлетов в локальное хранилище при обновлении состояния\n  useEffect(() => {\n    localStorage.setItem(\n      \"favoriteAthletes\",\n      JSON.stringify(state.favoriteAthletes)\n    );\n  }, [state.favoriteAthletes]);\n\n  // Функция для добавления атлета в избранные\n  const addAthleteToFavorite = (athlete) => {\n    dispatch({ type: \"ADD_TO_FAVORITE\", payload: athlete });\n  };\n\n  // Функция для удаления атлета из избранных\n  const removeAthleteFromFavorite = (id) => {\n    dispatch({ type: \"REMOVE_FROM_FAVORITE\", payload: id });\n  };\n\n  // Функция для проверки, есть ли атлет в избранных\n  const isAthleteInFavorite = (id) => {\n    return state.favoriteAthletes.some((athlete) => athlete.id === id);\n  };\n\n  // Значения контекста, доступные для компонентов\n  const values = {\n    addAthleteToFavorite,\n    removeAthleteFromFavorite,\n    isAthleteInFavorite,\n    favoriteAthletes: state.favoriteAthletes,\n  };\n\n  // Возвращаем провайдер контекста с доступными значениями\n  return (\n    <FavoriteContext.Provider value={values}>\n      {children}\n    </FavoriteContext.Provider>\n  );\n};\n\nexport default FavoriteContextProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}