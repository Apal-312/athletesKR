{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Box,Typography}from\"@mui/material\";import ProductCard from\"./ProductCard\";// Компонент для отображения карточки продукта\nimport SideBar from\"./SideBar\";// Компонент для отображения бокового меню\nimport PaginationControlled from\"./Pagination\";// Компонент для пагинации\nimport{useProduct}from\"../context/ProductContextProvider\";// Хук для доступа к контексту продуктов\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProductList=()=>{const{getAthletes,athletes:athleteData}=useProduct();// Получаем функцию getAthletes и данные спортсменов (athletes)\nconst[page,setPage]=useState(1);// Состояние для текущей страницы пагинации\n// Эффект для загрузки данных при первом рендере компонента\nuseEffect(()=>{getAthletes();// Загружаем список спортсменов\n},[]);const itemPerPage=8;// Количество элементов на одной странице\n// Вычисляем количество страниц для пагинации\nconst count=Math.ceil(athleteData.length/itemPerPage);// Функция для получения данных для текущей страницы\nconst currentData=()=>{const beginIndex=(page-1)*itemPerPage;// Индекс начала текущей страницы\nconst endIndex=beginIndex+itemPerPage;// Индекс конца текущей страницы\nreturn athleteData.slice(beginIndex,endIndex);// Возвращаем данные для текущей страницы\n};// Функция для изменения страницы при клике на пагинацию\nconst handleChange=(event,value)=>{setPage(value);// Обновляем состояние текущей страницы\n};return/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",width:\"100%\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",width:\"100%\"},children:[/*#__PURE__*/_jsx(SideBar,{}),\" \"]}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1,display:\"flex\",flexWrap:\"wrap\",justifyContent:\"center\",// Центрируем карточки продуктов\nmarginTop:\"20px\"// Отступ сверху\n},children:currentData().map(athlete=>/*#__PURE__*/_jsx(ProductCard,{product:athlete},athlete.id)// Для каждого спортсмена отображаем его карточку\n)}),/*#__PURE__*/_jsx(Box,{sx:{display:\"flex\",justifyContent:\"center\",marginTop:\"20px\"},children:/*#__PURE__*/_jsx(PaginationControlled,{page:page// Текущая страница\n,count:count// Количество страниц\n,handleChange:handleChange// Функция изменения страницы\n})})]});};export default ProductList;","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","ProductCard","SideBar","PaginationControlled","useProduct","jsx","_jsx","jsxs","_jsxs","ProductList","getAthletes","athletes","athleteData","page","setPage","itemPerPage","count","Math","ceil","length","currentData","beginIndex","endIndex","slice","handleChange","event","value","sx","display","width","flexDirection","children","flexGrow","flexWrap","justifyContent","marginTop","map","athlete","product","id"],"sources":["/Users/macbook/Desktop/athletesKR2/src/components/products/ProductList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport ProductCard from \"./ProductCard\"; // Компонент для отображения карточки продукта\nimport SideBar from \"./SideBar\"; // Компонент для отображения бокового меню\nimport PaginationControlled from \"./Pagination\"; // Компонент для пагинации\nimport { useProduct } from \"../context/ProductContextProvider\"; // Хук для доступа к контексту продуктов\n\nconst ProductList = () => {\n  const { getAthletes, athletes: athleteData } = useProduct(); // Получаем функцию getAthletes и данные спортсменов (athletes)\n\n  const [page, setPage] = useState(1); // Состояние для текущей страницы пагинации\n\n  // Эффект для загрузки данных при первом рендере компонента\n  useEffect(() => {\n    getAthletes(); // Загружаем список спортсменов\n  }, []);\n\n  const itemPerPage = 8; // Количество элементов на одной странице\n\n  // Вычисляем количество страниц для пагинации\n  const count = Math.ceil(athleteData.length / itemPerPage);\n\n  // Функция для получения данных для текущей страницы\n  const currentData = () => {\n    const beginIndex = (page - 1) * itemPerPage; // Индекс начала текущей страницы\n    const endIndex = beginIndex + itemPerPage; // Индекс конца текущей страницы\n    return athleteData.slice(beginIndex, endIndex); // Возвращаем данные для текущей страницы\n  };\n\n  // Функция для изменения страницы при клике на пагинацию\n  const handleChange = (event, value) => {\n    setPage(value); // Обновляем состояние текущей страницы\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", width: \"100%\", flexDirection: \"column\" }}>\n      <Box sx={{ display: \"flex\", width: \"100%\" }}>\n        <SideBar /> {/* Отображаем боковую панель для фильтрации или поиска */}\n      </Box>\n\n      <Box\n        sx={{\n          flexGrow: 1,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\", // Центрируем карточки продуктов\n          marginTop: \"20px\", // Отступ сверху\n        }}\n      >\n        {/* Отображаем карточки продуктов для текущей страницы */}\n        {currentData().map((athlete) => (\n          <ProductCard key={athlete.id} product={athlete} /> // Для каждого спортсмена отображаем его карточку\n        ))}\n      </Box>\n\n      <Box\n        sx={{ display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}\n      >\n        {/* Отображаем пагинацию с текущей страницей и количеством страниц */}\n        <PaginationControlled\n          page={page} // Текущая страница\n          count={count} // Количество страниц\n          handleChange={handleChange} // Функция изменения страницы\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProductList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,GAAG,CAAEC,UAAU,KAAQ,eAAe,CAC/C,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAE;AACzC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAE;AACjC,MAAO,CAAAC,oBAAoB,KAAM,cAAc,CAAE;AACjD,OAASC,UAAU,KAAQ,mCAAmC,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhE,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,WAAW,CAAEC,QAAQ,CAAEC,WAAY,CAAC,CAAGR,UAAU,CAAC,CAAC,CAAE;AAE7D,KAAM,CAACS,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAE;AAErC;AACAD,SAAS,CAAC,IAAM,CACda,WAAW,CAAC,CAAC,CAAE;AACjB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,WAAW,CAAG,CAAC,CAAE;AAEvB;AACA,KAAM,CAAAC,KAAK,CAAGC,IAAI,CAACC,IAAI,CAACN,WAAW,CAACO,MAAM,CAAGJ,WAAW,CAAC,CAEzD;AACA,KAAM,CAAAK,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,UAAU,CAAG,CAACR,IAAI,CAAG,CAAC,EAAIE,WAAW,CAAE;AAC7C,KAAM,CAAAO,QAAQ,CAAGD,UAAU,CAAGN,WAAW,CAAE;AAC3C,MAAO,CAAAH,WAAW,CAACW,KAAK,CAACF,UAAU,CAAEC,QAAQ,CAAC,CAAE;AAClD,CAAC,CAED;AACA,KAAM,CAAAE,YAAY,CAAGA,CAACC,KAAK,CAAEC,KAAK,GAAK,CACrCZ,OAAO,CAACY,KAAK,CAAC,CAAE;AAClB,CAAC,CAED,mBACElB,KAAA,CAACT,GAAG,EAAC4B,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAM,CAAEC,aAAa,CAAE,QAAS,CAAE,CAAAC,QAAA,eACnEvB,KAAA,CAACT,GAAG,EAAC4B,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAE,QAAA,eAC1CzB,IAAA,CAACJ,OAAO,GAAE,CAAC,IAAC,EACT,CAAC,cAENI,IAAA,CAACP,GAAG,EACF4B,EAAE,CAAE,CACFK,QAAQ,CAAE,CAAC,CACXJ,OAAO,CAAE,MAAM,CACfK,QAAQ,CAAE,MAAM,CAChBC,cAAc,CAAE,QAAQ,CAAE;AAC1BC,SAAS,CAAE,MAAQ;AACrB,CAAE,CAAAJ,QAAA,CAGDX,WAAW,CAAC,CAAC,CAACgB,GAAG,CAAEC,OAAO,eACzB/B,IAAA,CAACL,WAAW,EAAkBqC,OAAO,CAAED,OAAQ,EAA7BA,OAAO,CAACE,EAAuB,CAAE;AACpD,CAAC,CACC,CAAC,cAENjC,IAAA,CAACP,GAAG,EACF4B,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEM,cAAc,CAAE,QAAQ,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAJ,QAAA,cAGrEzB,IAAA,CAACH,oBAAoB,EACnBU,IAAI,CAAEA,IAAM;AAAA,CACZG,KAAK,CAAEA,KAAO;AAAA,CACdQ,YAAY,CAAEA,YAAc;AAAA,CAC7B,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}