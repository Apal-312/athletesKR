{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR/src/auth/Auth.jsx\";\nimport React, { useState } from \"react\";\nimport { useAuth } from \"../components/context/AuthContextProvider\";\nimport \"../pages/Auth.css\";\nconst Auth = () => {\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleRegister,\n    handleLogin,\n    emailError,\n    passwordError,\n    hasAccount,\n    setHasAccount\n  } = useAuth();\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (hasAccount && password !== confirmPassword) {\n      setConfirmPasswordError(\"Пароли не совпадают\");\n      return;\n    }\n    setConfirmPasswordError(\"\");\n    if (email && password) {\n      if (hasAccount) {\n        handleRegister();\n      } else {\n        handleLogin();\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"auth-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, hasAccount ? \"Регистрация\" : \"Вход\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, hasAccount && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n    required: true,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n    autoFocus: true,\n    required: true,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, emailError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    required: true,\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, passwordError)), hasAccount && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    required: true,\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, confirmPasswordError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, hasAccount ? \"Регистрация\" : \"Вход\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, hasAccount ? \"Уже есть аккаунт?\" : \"Нет аккаунта?\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setHasAccount(!hasAccount),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, hasAccount ? \"Вход\" : \"Регистрация\")))))));\n};\nexport default Auth;","map":{"version":3,"names":["React","useState","useAuth","Auth","email","setEmail","password","setPassword","handleRegister","handleLogin","emailError","passwordError","hasAccount","setHasAccount","confirmPassword","setConfirmPassword","confirmPasswordError","setConfirmPasswordError","handleSubmit","e","preventDefault","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","onChange","target","value","autoFocus","onClick"],"sources":["/Users/macbook/Desktop/athletesKR/src/auth/Auth.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAuth } from \"../components/context/AuthContextProvider\";\nimport \"../pages/Auth.css\";\n\nconst Auth = () => {\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleRegister,\n    handleLogin,\n    emailError,\n    passwordError,\n    hasAccount,\n    setHasAccount,\n  } = useAuth();\n\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (hasAccount && password !== confirmPassword) {\n      setConfirmPasswordError(\"Пароли не совпадают\");\n      return;\n    }\n    setConfirmPasswordError(\"\");\n\n    if (email && password) {\n      if (hasAccount) {\n        handleRegister();\n      } else {\n        handleLogin();\n      }\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"left-section\"></div>\n      <div className=\"right-section\">\n        <div className=\"auth-form\">\n          <h2 className=\"auth-title\">{hasAccount ? \"Регистрация\" : \"Вход\"}</h2>\n          <form onSubmit={handleSubmit}>\n            {hasAccount && (\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Ваше имя\"\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n            )}\n            <div className=\"input-group\">\n              <input\n                type=\"email\"\n                placeholder=\"Электронная почта\"\n                autoFocus\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <p className=\"error-msg\">{emailError}</p>\n            </div>\n            <div className=\"input-group\">\n              <input\n                type=\"password\"\n                placeholder=\"Пароль\"\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <p className=\"error-msg\">{passwordError}</p>\n            </div>\n            {hasAccount && (\n              <div className=\"input-group\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Подтвердите пароль\"\n                  required\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n                <p className=\"error-msg\">{confirmPasswordError}</p>\n              </div>\n            )}\n            <div className=\"btn-container\">\n              <button type=\"submit\">\n                {hasAccount ? \"Регистрация\" : \"Вход\"}\n              </button>\n              <p>\n                {hasAccount ? \"Уже есть аккаунт?\" : \"Нет аккаунта?\"}{\" \"}\n                <span onClick={() => setHasAccount(!hasAccount)}>\n                  {hasAccount ? \"Вход\" : \"Регистрация\"}\n                </span>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}