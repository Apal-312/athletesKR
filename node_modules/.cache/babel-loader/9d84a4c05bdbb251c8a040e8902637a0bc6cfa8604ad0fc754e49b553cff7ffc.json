{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/athletesKR/src/components/homePage/MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Box, Typography, Card, CardContent } from \"@mui/material\";\nimport Confetti from \"react-confetti\"; // Подключаем библиотеку для салютов\nimport videoBg from \"../homePage/assets/videoBg.mp4\"; // Путь к видео\nimport natureKR from \"../homePage/assets/natureKR.mp4\"; // Путь к видео\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [isWrongAnswer, setIsWrongAnswer] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [showQuiz, setShowQuiz] = useState(true); // Теперь викторина сразу отображается\n\n  const questions = [{\n    question: \"Какой самый высокий пик в Кыргызстане?\",\n    answers: [\"Пик Ленина\", \"Пик Победы\", \"Пик Манас\", \"Пик Корона\"],\n    correctAnswer: \"Пик Победы\"\n  }, {\n    question: \"Какой цвет преобладает на флаге Кыргызстана?\",\n    answers: [\"Синий\", \"Красный\", \"Зелёный\", \"Жёлтый\"],\n    correctAnswer: \"Красный\"\n  }];\n  const handleAnswerClick = answer => {\n    setSelectedAnswer(answer);\n    const correct = answer === questions[currentQuestionIndex].correctAnswer;\n    setIsCorrect(correct);\n    setIsWrongAnswer(!correct);\n    if (correct) {\n      setScore(prevScore => prevScore + 1);\n      setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 5000);\n    } else {\n      setTimeout(() => setIsWrongAnswer(false), 1500);\n    }\n    setTimeout(() => {\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n      } else {\n        setQuizFinished(true);\n      }\n    }, 3000);\n  };\n  const handleRestartQuiz = () => {\n    setScore(0);\n    setCurrentQuestionIndex(0);\n    setQuizFinished(false);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    setIsWrongAnswer(false);\n  };\n  const {\n    question,\n    answers\n  } = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\",\n      minHeight: \"100vh\",\n      overflow: \"hidden\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: -1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoBg,\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        playsInline: true,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n          filter: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"relative\",\n        padding: \"40px 20px\",\n        color: \"white\",\n        textAlign: \"center\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        boxShadow: \"0 4px 15px rgba(255, 255, 255, 0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        src: natureKR,\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        playsInline: true,\n        preload: \"auto\",\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n          zIndex: -1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), showQuiz && /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n          borderRadius: \"10px\",\n          padding: \"20px\",\n          width: \"100%\",\n          maxWidth: \"600px\",\n          margin: \"0 auto\",\n          boxShadow: \"0 4px 15px rgba(255, 255, 255, 0.2)\",\n          backdropFilter: \"blur(10px)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            color: \"white\",\n            marginBottom: \"20px\"\n          },\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => handleAnswerClick(answer),\n            sx: {\n              cursor: \"pointer\",\n              margin: \"10px\",\n              width: \"100%\",\n              transition: \"all 0.3s ease\",\n              backgroundColor: selectedAnswer === answer ? isCorrect ? \"rgba(0, 150, 0, 0.7)\" : \"rgba(150, 0, 0, 0.7)\" : \"rgba(255, 255, 255, 0.1)\",\n              color: \"white\",\n              border: \"1px solid rgba(255, 255, 255, 0.3)\",\n              \"&:hover\": {\n                transform: \"scale(1.05)\",\n                backgroundColor: selectedAnswer === answer ? isCorrect ? \"rgba(0, 150, 0, 0.8)\" : \"rgba(150, 0, 0, 0.8)\" : \"rgba(255, 255, 255, 0.3)\",\n                filter: \"brightness(1.2)\"\n              },\n              animation: isWrongAnswer ? \"shake 0.6s ease-out\" : \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)), selectedAnswer && /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              marginTop: \"20px\",\n              color: isCorrect ? \"lightgreen\" : \"red\"\n            },\n            children: isCorrect ? \"Верно!\" : \"Неверно! Попробуйте ещё раз.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 26\n      }, this), quizFinished && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            color: \"white\"\n          },\n          children: [\"\\u0412\\u0430\\u0448 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442: \", score, \" \\u0438\\u0437 \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRestartQuiz,\n          sx: {\n            marginTop: \"20px\",\n            color: \"#fff\",\n            backgroundColor: \"#4CAF50\",\n            \"&:hover\": {\n              backgroundColor: \"#45a049\"\n            }\n          },\n          children: \"\\u041F\\u0440\\u043E\\u0439\\u0442\\u0438 \\u0432\\u0438\\u043A\\u0442\\u043E\\u0440\\u0438\\u043D\\u0443 \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n            @keyframes shake {\n              0% { transform: translateX(0); }\n              25% { transform: translateX(-10px); }\n              50% { transform: translateX(10px); }\n              75% { transform: translateX(-10px); }\n              100% { transform: translateX(0); }\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"PxgbqJDo8e9Q4KjCDjNOlodNRaI=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Box","Typography","Card","CardContent","Confetti","videoBg","natureKR","jsxDEV","_jsxDEV","MainPage","_s","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","showConfetti","setShowConfetti","isWrongAnswer","setIsWrongAnswer","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","quizFinished","setQuizFinished","showQuiz","setShowQuiz","questions","question","answers","correctAnswer","handleAnswerClick","answer","correct","prevScore","setTimeout","length","handleRestartQuiz","sx","position","minHeight","overflow","display","flexDirection","children","top","left","width","height","zIndex","src","autoPlay","loop","muted","playsInline","style","objectFit","filter","fileName","_jsxFileName","lineNumber","columnNumber","padding","color","textAlign","borderRadius","boxShadow","preload","backgroundColor","maxWidth","margin","backdropFilter","variant","marginBottom","alignItems","map","index","onClick","cursor","transition","border","transform","animation","marginTop","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/athletesKR/src/components/homePage/MainPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Box, Typography, Card, CardContent } from \"@mui/material\";\nimport Confetti from \"react-confetti\"; // Подключаем библиотеку для салютов\nimport videoBg from \"../homePage/assets/videoBg.mp4\"; // Путь к видео\nimport natureKR from \"../homePage/assets/natureKR.mp4\"; // Путь к видео\n\nconst MainPage = () => {\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [isWrongAnswer, setIsWrongAnswer] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [showQuiz, setShowQuiz] = useState(true); // Теперь викторина сразу отображается\n\n  const questions = [\n    {\n      question: \"Какой самый высокий пик в Кыргызстане?\",\n      answers: [\"Пик Ленина\", \"Пик Победы\", \"Пик Манас\", \"Пик Корона\"],\n      correctAnswer: \"Пик Победы\",\n    },\n    {\n      question: \"Какой цвет преобладает на флаге Кыргызстана?\",\n      answers: [\"Синий\", \"Красный\", \"Зелёный\", \"Жёлтый\"],\n      correctAnswer: \"Красный\",\n    },\n  ];\n\n  const handleAnswerClick = (answer) => {\n    setSelectedAnswer(answer);\n    const correct = answer === questions[currentQuestionIndex].correctAnswer;\n    setIsCorrect(correct);\n    setIsWrongAnswer(!correct);\n\n    if (correct) {\n      setScore((prevScore) => prevScore + 1);\n      setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 5000);\n    } else {\n      setTimeout(() => setIsWrongAnswer(false), 1500);\n    }\n\n    setTimeout(() => {\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n      } else {\n        setQuizFinished(true);\n      }\n    }, 3000);\n  };\n\n  const handleRestartQuiz = () => {\n    setScore(0);\n    setCurrentQuestionIndex(0);\n    setQuizFinished(false);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    setIsWrongAnswer(false);\n  };\n\n  const { question, answers } = questions[currentQuestionIndex];\n\n  return (\n    <Box\n      sx={{\n        position: \"relative\",\n        minHeight: \"100vh\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/* Видео фон */}\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          zIndex: -1,\n        }}\n      >\n        <video\n          src={videoBg}\n          autoPlay\n          loop\n          muted\n          playsInline\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\",\n            filter: \"none\",\n          }}\n        />\n      </Box>\n\n      {/* Блок с викториной */}\n      <Box\n        sx={{\n          position: \"relative\",\n          padding: \"40px 20px\",\n          color: \"white\",\n          textAlign: \"center\",\n          borderRadius: \"10px\",\n          overflow: \"hidden\",\n          boxShadow: \"0 4px 15px rgba(255, 255, 255, 0.1)\",\n        }}\n      >\n        <video\n          src={natureKR}\n          autoPlay\n          loop\n          muted\n          playsInline\n          preload=\"auto\"\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\",\n            zIndex: -1,\n          }}\n        />\n\n        {showQuiz && (\n          <Card\n            sx={{\n              backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n              borderRadius: \"10px\",\n              padding: \"20px\",\n              width: \"100%\",\n              maxWidth: \"600px\",\n              margin: \"0 auto\",\n              boxShadow: \"0 4px 15px rgba(255, 255, 255, 0.2)\",\n              backdropFilter: \"blur(10px)\",\n            }}\n          >\n            <Typography\n              variant=\"h4\"\n              sx={{ color: \"white\", marginBottom: \"20px\" }}\n            >\n              {question}\n            </Typography>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              {answers.map((answer, index) => (\n                <Card\n                  key={index}\n                  onClick={() => handleAnswerClick(answer)}\n                  sx={{\n                    cursor: \"pointer\",\n                    margin: \"10px\",\n                    width: \"100%\",\n                    transition: \"all 0.3s ease\",\n                    backgroundColor:\n                      selectedAnswer === answer\n                        ? isCorrect\n                          ? \"rgba(0, 150, 0, 0.7)\"\n                          : \"rgba(150, 0, 0, 0.7)\"\n                        : \"rgba(255, 255, 255, 0.1)\",\n                    color: \"white\",\n                    border: \"1px solid rgba(255, 255, 255, 0.3)\",\n                    \"&:hover\": {\n                      transform: \"scale(1.05)\",\n                      backgroundColor:\n                        selectedAnswer === answer\n                          ? isCorrect\n                            ? \"rgba(0, 150, 0, 0.8)\"\n                            : \"rgba(150, 0, 0, 0.8)\"\n                          : \"rgba(255, 255, 255, 0.3)\",\n                      filter: \"brightness(1.2)\",\n                    },\n                    animation: isWrongAnswer ? \"shake 0.6s ease-out\" : \"none\",\n                  }}\n                >\n                  <CardContent>\n                    <Typography>{answer}</Typography>\n                  </CardContent>\n                </Card>\n              ))}\n              {selectedAnswer && (\n                <Typography\n                  sx={{\n                    marginTop: \"20px\",\n                    color: isCorrect ? \"lightgreen\" : \"red\",\n                  }}\n                >\n                  {isCorrect ? \"Верно!\" : \"Неверно! Попробуйте ещё раз.\"}\n                </Typography>\n              )}\n            </Box>\n          </Card>\n        )}\n        {showConfetti && <Confetti />}\n        {quizFinished && (\n          <Box sx={{ marginTop: \"20px\" }}>\n            <Typography variant=\"h5\" sx={{ color: \"white\" }}>\n              Ваш результат: {score} из {questions.length}\n            </Typography>\n            <Button\n              onClick={handleRestartQuiz}\n              sx={{\n                marginTop: \"20px\",\n                color: \"#fff\",\n                backgroundColor: \"#4CAF50\",\n                \"&:hover\": { backgroundColor: \"#45a049\" },\n              }}\n            >\n              Пройти викторину заново\n            </Button>\n          </Box>\n        )}\n\n        <style>\n          {`\n            @keyframes shake {\n              0% { transform: translateX(0); }\n              25% { transform: translateX(-10px); }\n              50% { transform: translateX(10px); }\n              75% { transform: translateX(-10px); }\n              100% { transform: translateX(0); }\n            }\n          `}\n        </style>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}